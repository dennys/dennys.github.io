<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>DevOps - Category - Dennys Diary</title>
        <link>https://dennys.github.io/categories/devops/</link>
        <description>DevOps - Category - Dennys Diary</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 25 Mar 2022 00:00:00 &#43;0800</lastBuildDate><atom:link href="https://dennys.github.io/categories/devops/" rel="self" type="application/rss+xml" /><item>
    <title>Use GitLab to do .NET 4.X CI/CD</title>
    <link>https://dennys.github.io/2022/03/gitlab-dotnet4-ci-cd/</link>
    <pubDate>Fri, 25 Mar 2022 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/2022/03/gitlab-dotnet4-ci-cd/</guid>
    <description><![CDATA[<h2 id="precondition">Precondition</h2>
<p>You already have a GitLab (<a href="http://gitlab.com/" target="_blank" rel="noopener noreffer">GitLab Saas</a> or GitLab self managed). This document is for .NET 4.X, if you want to build .NET core or .NET 5/6/7/&hellip;, you can use docker to run GitLab Runner.</p>
<h3 id="step-1---install-git-client">Step 1 - Install Git client</h3>
<p>Download and install <a href="https://git-scm.com/download/win" target="_blank" rel="noopener noreffer">Git for Windows</a>. Portable version is ok, but because Git Runner is a Windows service, please add git.exe into PATH.</p>
<h3 id="step-2---prepare-net-build-environment">Step 2 - prepare .NET build environment</h3>
<p>Download and install <a href="https://visualstudio.microsoft.com/" target="_blank" rel="noopener noreffer">Visual Studio</a>. (Please let me know if I can build a .NET build environment without Visual Studio, thanks.)</p>
<h3 id="step-3---install-gitlab-runner">Step 3 - Install GitLab Runner</h3>
<ol>
<li>
<p>Download <a href="https://docs.gitlab.com/runner/install/windows.html" target="_blank" rel="noopener noreffer">GitLab Runner</a></p>
</li>
<li>
<p>Rename gitlab-runner-windows-amd64.exe to gitlab-runner.exe</p>
</li>
<li>
<p>Get the token to run GitLab Runner</p>
</li>
<li>
<p>Generate GitLab Runner configuration file (config.toml)</p>
<ol>
<li>
<p>Run the command</p>
<p>gitlab-runner.exe register &ndash;url <a href="https://gitlab.com/" target="_blank" rel="noopener noreffer">https://gitlab.com/</a> &ndash;registration-token $REGISTRATION_TOKEN</p>
</li>
</ol>
</li>
<li>
<p>Modify config.toml</p>
<ol>
<li>Because Gitlab Runner doesn&rsquo;t suppoer Windows shell after version 13, you need to use PowerShell. If you use Power Shell, please open config.toml and rename &lsquo;pwsh&rsquo; to &lsquo;powershell&rsquo;. (If you use <a href="https://github.com/PowerShell/PowerShell" target="_blank" rel="noopener noreffer">Power Shell Core</a>, you don&rsquo;t need to do anything)</li>
<li>If you use a portable Git, you need to modify <code>$env:Path</code> of PowerShell.</li>
<li>If you find your log is garbled (ex: your Windows server is not English version), please add &ldquo;chcp 65001&rdquo; to change the encoding to UTF-8.</li>
</ol>
</li>
<li>
<p>Register GitLab Runner as a Windows service and start it.</p>
<ol>
<li>Run the command <code>gitlab-runner install</code> to install as a Windows service.</li>
<li>Run the command <code>gitlab-runner start</code> to start the service.</li>
</ol>
</li>
<li>
<p>config.toml sample =&gt; <mark style="background-color:#ff675f;" class="has-inline-color">remember, if you modify the file, please execute <code>gitlab-runner.exe restart</code> to restart GitLab runner.</mark></p>
</li>
</ol>
<!-- wp:code -->
<pre class="wp-block-code"><code>concurrent = 1
check_interval = 0

&#91;session_server]
  session_timeout = 1800

&#91;&#91;runners]]
  name = "GitLab Runner 007"
  url = "https://gitlab.com/"
  token = "******************"
  executor = "shell"
  shell = "powershell"
  pre_clone_script = """
      chcp 65001
      $env:Path += ";C:\\Gitlab\\PortableGit\\cmd"
  """
  &#91;runners.custom_build_dir]
  &#91;runners.cache]
    &#91;runners.cache.s3]
    &#91;runners.cache.gcs]
    &#91;runners.cache.azure]</code></pre>
<!-- /wp:code -->
<p>If you always see the Credential Helper Selector, please choose &ldquo;no helper&rdquo; and &ldquo;Always use this from now on&rdquo;.</p>
<p><a href="https://dennys.files.wordpress.com/2021/12/image-4.png"></a></p>
<h3 id="step-4---write-gitlab-ciyml">Step 4 - Write .gitlab-ci.yml</h3>
<ol>
<li>Edit .gitlab-ci.yml, the following is a sample:</li>
</ol>
<!-- wp:code -->
<pre class="wp-block-code"><code>stages:
    - build
    - test

build:
    stage: build
    script:
        - "dotnet build"
    artifacts:
      paths:
        - .\test

test:
    stage: test
    script: 
        - "dotnet test"</code></pre>
<!-- /wp:code -->
<h3 id="step-5---start-to-buildtestdeploy-code-local-machine">Step 5 - Start to build/test/deploy code (local machine)</h3>
<p>Change directory to the location of .gitlab-ci.yml and execute this command</p>
<pre><code>gitlab-runner.exe exec shell build
</code></pre>
<h3 id="step-6---start-to-test-cicd-local-machine">Step 6 - Start to test CI/CD (local machine)</h3>
<p>If everything is ok, you can commit .gitlab-ci.yml and GitLab should run it automatically.</p>
<h3 id="sast-static-application-security-testing">SAST (Static Application Security Testing)</h3>
<p>GitLab can check your source code for known vulnerabilities, unfortunately, it only support Linux container, Windows containers are not yet supported. (reference: <a href="https://docs.gitlab.com/ee/user/application_security/sast/" target="_blank" rel="noopener noreffer">https://docs.gitlab.com/ee/user/application_security/sast/</a>)</p>
]]></description>
</item>
<item>
    <title>GitLab Checkmarx integration</title>
    <link>https://dennys.github.io/2022/01/gitlab-checkmarx-integration/</link>
    <pubDate>Sat, 15 Jan 2022 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/2022/01/gitlab-checkmarx-integration/</guid>
    <description><![CDATA[<p>
</p>
<h2 id="purpose">Purpose</h2>
<p>When we commit code to <a href="https://gitlab.com/" target="_blank" rel="noopener noreffer">GitLab</a>, we want GitLab sends the code to [Checkmarx] (<a href="https://checkmarx.com/" target="_blank" rel="noopener noreffer">https://checkmarx.com/</a>) to scan. (the next step is to integrate the scan result to SonarQube)</p>
<h2 id="procedure">Procedure</h2>
<p>You can reference official document: <a href="https://checkmarx.atlassian.net/wiki/spaces/SD/pages/1929937052/GitLab&#43;Integration" target="_blank" rel="noopener noreffer">https://checkmarx.atlassian.net/wiki/spaces/SD/pages/1929937052/GitLab+Integration</a></p></p>
<ol>
<li>Edit .gitlab-ci.yml</li>
</ol>
<!-- wp:code -->
<pre class="wp-block-code"><code>include: 'https://raw.githubusercontent.com/checkmarx-ltd/cx-flow/develop/templates/gitlab/v3/Checkmarx.gitlab-ci.yml'

variables:
    CX_PROJECT: ProjectXXX #The project name you want to show in Checkmarx
</code></pre>
<!-- /wp:code -->
<ol start="2">
<li>Edit GitLab CI/CD variables</li>
</ol>
<p>Please remember to set GITLAB_URL and GITLAB_TOKEN, then Checkmarx will create GitLab issue for Checkmarx issues.</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/image-4.png"></a></p>
<ol start="3">
<li>Trigger build - Checkmarx analysis will be triggered when you create a merge request or you commit to master stream directly.</li>
</ol>
<p>Suggest to use pure English for CX_TEAM, if you use non English (ex: Chinese), you can check the log and find it cannot find the team.</p>
<pre><code>2022-01-12 02:51:22.748  INFO 11 --- [main] c.c.s.s.CxService [x4DNMhOL] : Found team /CxServer/Team1 with ID 16
</code></pre>
<p>During the analysis, you can check the status from Checkmarx, it takes long time to analyze.</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/image-6.png"></a></p>
<p>After the analysis, you can check the result in Checkmarx.</p>
<p>You can also check it from GitLab, it generates 1 report in merge request and it will create issues by category. The following is the reqport of merge request.</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/image-7.png"></a></p>
<p>In the above report, there are 5 issues, it will creates 5 issues by file/by category.</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/image-8.png"></a></p>
<p>In the issue, it shows the detail vulnerability information.</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/image-9.png"></a></p>
]]></description>
</item>
<item>
    <title>GitLab Checkmarx SonarQube integration</title>
    <link>https://dennys.github.io/2022/01/gitlab-checkmarx-sonarqube-integration/</link>
    <pubDate>Sat, 15 Jan 2022 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/2022/01/gitlab-checkmarx-sonarqube-integration/</guid>
    <description><![CDATA[<p>

</p>
<h2 id="purpose">Purpose</h2>
<p>When we commit code to <a href="https://gitlab.com/" target="_blank" rel="noopener noreffer">GitLab</a>, we want GitLab to trigger these actions automatically:</p>
<ol>
<li><a href="https://gitlab.com/" target="_blank" rel="noopener noreffer">GitLab</a> sends the code to <a href="https://checkmarx.com/" target="_blank" rel="noopener noreffer">Checkmarx</a> to scan.</li>
<li><a href="https://gitlab.com/" target="_blank" rel="noopener noreffer">GitLab</a> triggers <a href="https://www.sonarqube.org/" target="_blank" rel="noopener noreffer">SonarQube</a> to sacn.</li>
<li><a href="https://www.sonarqube.org/" target="_blank" rel="noopener noreffer">SonarQube</a> integrate <a href="https://checkmarx.com/" target="_blank" rel="noopener noreffer">Checkmarx</a>&rsquo;s report.</li>
</ol>
<h2 id="procedure">Procedure</h2>
<p>You can reference the official document: <a href="https://checkmarx.atlassian.net/wiki/spaces/SD/pages/169246832/SonarQube&#43;Plugin&#43;v8.5.0&#43;and&#43;up" target="_blank" rel="noopener noreffer">https://checkmarx.atlassian.net/wiki/spaces/SD/pages/169246832/SonarQube+Plugin+v8.5.0+and+up</a></p>
<ol>
<li>Download the plugin from <a href="https://checkmarx.com/plugins/">here</a>, it only supports SonarQube LTS version (for now, it&rsquo;s 8.x)</li>
<li>Configurea Quality Gate/Profiles of SonarQube for Checkmarx&rsquo;s rules.</li>
<li>Use GitLab to trigger Checkmarx scan and record the project name of Checkmarx.</li>
<li>Configure Checkmarx data in SonarQube, you can reference <a href="https://checkmarx.atlassian.net/wiki/spaces/SD/pages/169345207/Configuring+a+Project+for+the+Checkmarx+SonarQube+Plugin+v8.5.0+and+up">here</a>.</li>
<li>Trigger GitLab CI again, you will see the following log in your SonarQube job</li>
</ol>
<!-- wp:code -->
<pre class="wp-block-code"><code>INFO: Sensor Import Checkmarx scan results to SonarQube &#91;checkmarx]
INFO: Retrieving Checkmarx scan results for current module &#91;Checkmarx plugin version: 2021.2.1]
INFO: Getting Checkmarx configuration data from sonar Database.
INFO: Resolving Cx setting: checkmarx.server.project_name
INFO: Forced authentication is enabled: Sonar credentials must be provided
INFO: Sonar server token is provided
INFO: Checkmarx credentials migration not needed
INFO: Sonar server token is provided
INFO: Resolving Cx setting: checkmarx.server.project_name
INFO: Forced authentication is enabled: Sonar credentials must be provided
INFO: Checkmarx server version &#91;9.2.0.41015]. Hotfix &#91;24].
INFO: Logging into the Checkmarx service.
INFO: Connecting to https://your.checkmarx.server/
INFO: Initializing Cx client &#91;2020.2.4.NO.SCA]
INFO: Checkmarx server version &#91;9.2.0.41015]. Hotfix &#91;24].
INFO: Logging into the Checkmarx service.
INFO: full team path: \CxServer\\Team1
INFO: preset name: All
INFO: ---------------------------------Get Last CxSAST Results:--------------------------------
INFO: Waiting for server to generate xml report. 4990 seconds left to timeout
INFO: Checkmarx High vulnerabilities: 3
INFO: Checkmarx New-High vulnerabilities: 0
INFO: Checkmarx Medium vulnerabilities: 23
INFO: Checkmarx New-Medium vulnerabilities: 1
INFO: Checkmarx Low vulnerabilities: 142
INFO: Checkmarx New-Low vulnerabilities: 7
INFO: Checkmarx scan link: https://your.checkmarx.server//CxWebClient/ViewerMain.aspx?scanId=1000157&amp;ProjectID=67</code></pre>
<!-- /wp:code -->
<ol start="6">
<li>You can see the Checkmarx issues in SonarQube now.</li>
</ol>
]]></description>
</item>
</channel>
</rss>
