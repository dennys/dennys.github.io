<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on Dennys Diary</title>
    <link>https://dennys.github.io/en/tags/javascript/</link>
    <description>Recent content in JavaScript on Dennys Diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Sun, 26 Jan 2025 22:00:00 +0800</lastBuildDate><atom:link href="https://dennys.github.io/en/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitLab Node.js SonarQube Integration</title>
      <link>https://dennys.github.io/en/doc/devops/gitlab-nodejs-dependency-test-sonarqube/</link>
      <pubDate>Sun, 26 Jan 2025 22:00:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/en/doc/devops/gitlab-nodejs-dependency-test-sonarqube/</guid>
      <description>
        
          
            Purpose In the fast-evolving landscape of software development, ensuring code quality and security is paramount. To streamline this process, integrating a robust set of tools becomes imperative. In this blog, we embark on a journey to seamlessly integrate GitLab, SonarQube, pytest, coverage.py, and dependency-check into a unified ecosystem. By combining version control, code analysis, testing, code coverage evaluation, and dependency scanning, we aim to create a powerful and efficient pipeline that not only enhances the overall quality of the codebase but also fortifies it against potential vulnerabilities.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Node.js &#43; MySQL (Connecton Pool &#43; Prepared Statement &#43; Transaction)</title>
      <link>https://dennys.github.io/en/doc/javascript/node-mysql/</link>
      <pubDate>Sun, 28 Jan 2024 00:00:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/en/doc/javascript/node-mysql/</guid>
      <description>
        
          
            Requirement I&#39;m tring to write some Node.js functions to wrap some basic database operations and my requirement is to support these features.
Connection pool Prepared statement Transaction Throw exception: when there is any exception, it can throw the exception to outside. Node.js MySQL drivers First, I find there are 4 drivers for Node.js to connect to MySQL/MariaDB, this is really ...
This is an old project and it&#39;s original driver is mysql.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Node &#43; Fastify &#43; OpenAPI &#43; Statistics</title>
      <link>https://dennys.github.io/en/doc/javascript/node-openapi/</link>
      <pubDate>Mon, 25 Sep 2023 00:00:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/en/doc/javascript/node-openapi/</guid>
      <description>
        
          
            Requirement I aim to develop a [Node].js(https://nodejs.org/)-based FastAPI that is OpenAPI compatible (formerly known as Swagger). To accomplish this, I will employ RepiDoc for generating OpenAPI documents and keep track of the API&#39;s execution status using swagger-stats.
Code This is package.json
1{ 2 &amp;#34;name&amp;#34;: &amp;#34;fastify-example&amp;#34;, 3 &amp;#34;version&amp;#34;: &amp;#34;1.0.0&amp;#34;, 4 &amp;#34;description&amp;#34;: &amp;#34;A simple Fastify example with OpenAPI&amp;#34;, 5 &amp;#34;type&amp;#34;: &amp;#34;commonjs&amp;#34;, 6 &amp;#34;scripts&amp;#34;: { 7 &amp;#34;start&amp;#34;: &amp;#34;node app.js&amp;#34; 8 }, 9 &amp;#34;dependencies&amp;#34;: { 10 &amp;#34;@fastify/express&amp;#34;: &amp;#34;^2.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
