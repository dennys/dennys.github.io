<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.NET on Dennys Diary</title>
    <link>https://dennys.github.io/en/tags/.net/</link>
    <description>Recent content in .NET on Dennys Diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Mon, 04 Dec 2023 00:00:00 +0800</lastBuildDate><atom:link href="https://dennys.github.io/en/tags/.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Run SonarQube on Linux Docker with Mono to scan .NET 4.8 Code</title>
      <link>https://dennys.github.io/en/doc/devops/sonarqube-mono-dotnet4-integration/</link>
      <pubDate>Mon, 04 Dec 2023 00:00:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/en/doc/devops/sonarqube-mono-dotnet4-integration/</guid>
      <description>
        
          
            Requirement We know how to run SonarQube to scan .NET 4 code in GitLab + SonarQube + .NET 4.8 (non-docker), but it needs a Windows environment and does not support Linux.
Therefore, we want to find a solution to run SonarQube on Linux in docker if possible. In this artiflce, we try to use Mono framework (a cross platform .NET 4.7 framework) to run SonarQube on Linux to scan .NET 4 code.
          
          
        
      </description>
    </item>
    
    <item>
      <title>GitLab SonarQube Integration with .NET</title>
      <link>https://dennys.github.io/en/doc/devops/gitlab-sonarqube-integration-dotnet/</link>
      <pubDate>Sat, 17 Sep 2022 00:00:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/en/doc/devops/gitlab-sonarqube-integration-dotnet/</guid>
      <description>
        
          
            If you want to use SonarQube to scan your code during GitLab&#39;s CI/CD flow, please see the following procedures.
GitLab + SonarQube + .NET Core or .NET 5/6/7/... (docker) Refer to this document to integrate GitLab and SonarQube.
Set the environment variable in GitLab
$SONAR_URL: The URL of SonarQube $SONAR_TOKEN: The token to access SonarQube $CI_PROJECT_DIR: This is a predifined variable in GitLab, you can reference https://docs.gitlab.com/ee/ci/variables/predefined_variables.html $CI_JOB_NAME: This is a predifined variable in GitLab, you can reference https://docs.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Use GitLab to do .NET 4.8 CI/CD</title>
      <link>https://dennys.github.io/en/doc/devops/gitlab-dotnet4-ci-cd/</link>
      <pubDate>Fri, 25 Mar 2022 00:00:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/en/doc/devops/gitlab-dotnet4-ci-cd/</guid>
      <description>
        
          
            RemindThis is for .NET 4.8 or below only!!Precondition You already have a GitLab (GitLab Saas or GitLab self-managed). This document is for .NET 4.X, if you want to build .NET core or .NET 5/6/7/..., you can use docker to run GitLab Runner.
Procedure Step 1 - Prepare .NET build environment First, you need to prepare an environment to build .NET application. The easiest solution is to install Visual Studio.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
