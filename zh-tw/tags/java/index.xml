<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on </title>
    <link>https://dennys.github.io/tw/tags/java/</link>
    <description>Recent content in Java on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 30 Sep 2011 22:40:00 +0800</lastBuildDate><atom:link href="https://dennys.github.io/tw/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Maven 4 - Others</title>
      <link>https://dennys.github.io/tw/201109/maven-4-others/</link>
      <pubDate>Fri, 30 Sep 2011 22:40:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/tw/201109/maven-4-others/</guid>
      <description>
        
          
            Package source code 在 multi module 的架構裡面, 因為都只有打包 .class 到 local repository 的 .jar 檔裡面. 因此在 Eclipse 裡面按 F3 是無法連結到 source code 的, 要使用 maven-source-plugin 把 source code 也打包到 local repository 才可以. 如果原始的檔
          
          
        
      </description>
    </item>
    
    <item>
      <title>Maven 3 - 打包 EJB, EAR</title>
      <link>https://dennys.github.io/tw/201109/maven-3-ejb-ear/</link>
      <pubDate>Thu, 29 Sep 2011 10:37:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/tw/201109/maven-3-ejb-ear/</guid>
      <description>
        
          
            Ear 的打包 Ear 的打包分成兩階段, 第一個打包各個 ejb, 第二是把各個 ejb 加上 library 打包成 ear. 打包 ejb 的部分相對簡單, 如下. 最後會打包出 app-ejb1.jar (依據 finalName 的設定) 這個 ejb 檔案
          
          
        
      </description>
    </item>
    
    <item>
      <title>Maven 2 - 打包 war (含 applet)</title>
      <link>https://dennys.github.io/tw/201109/maven-2-war-applet/</link>
      <pubDate>Wed, 28 Sep 2011 22:37:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/tw/201109/maven-2-war-applet/</guid>
      <description>
        
          
            在 Maven 裡面打包 war 應該是最簡單的了, 照著 Maven 的目錄結構放好, 他就會自動去幫你把程式打包好. 唯一的問題是, 如果有用到 applet, 那就得另外處理了. 一個簡單的方
          
          
        
      </description>
    </item>
    
    <item>
      <title>Maven 1 - 打包 Jar, Applet 並簽名 Sign</title>
      <link>https://dennys.github.io/tw/201109/maven-1-jar-applet-sign/</link>
      <pubDate>Tue, 27 Sep 2011 20:49:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/tw/201109/maven-1-jar-applet-sign/</guid>
      <description>
        
          
            Maven 1 - 打包 Jar, Applet 並簽名 Sign&#39;,&#39;Applet 程式在 package 時有兩個重點, 一是要把所有用到的 jar 程式庫都包在一起, 因為 applet 不像 ear 或 war 有固定目錄可以放 *.jar. 二是如果需要用到 browser 機器的
          
          
        
      </description>
    </item>
    
    <item>
      <title>設定 WebLogic 的 memory 參數</title>
      <link>https://dennys.github.io/tw/201004/weblogic-memory-parameter/</link>
      <pubDate>Fri, 02 Apr 2010 00:00:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/tw/201004/weblogic-memory-parameter/</guid>
      <description>
        
          
            這是第二次吃虧了, 把他記下來, 免得下次又忘記了... 問題的起源在於記憶體不足, 通常訊息如下. 一次是某個單一 XML 訊息太大, 另一次是 ear 檔案太大, re-deploy
          
          
        
      </description>
    </item>
    
    <item>
      <title>WebLogic 和 NetWeaver 的 License</title>
      <link>https://dennys.github.io/tw/200908/weblogic-netweaver-license/</link>
      <pubDate>Sat, 08 Aug 2009 00:00:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/tw/200908/weblogic-netweaver-license/</guid>
      <description>
        
          
            又是一篇筆記, 又是一個吃虧兩次的問題... WebLogic 先講 WebLogic, 免費的 developer license, 可以用一年, 但是只能有 5 個 IP 連上來, 而且我覺得他 server 本身應該就已經算上一個 IP 了. 如
          
          
        
      </description>
    </item>
    
    <item>
      <title>JDBC Leaked Connection in WebLogic</title>
      <link>https://dennys.github.io/tw/200907/jdbc-leaked-connection-in-weblogic/</link>
      <pubDate>Mon, 06 Jul 2009 00:00:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/tw/200907/jdbc-leaked-connection-in-weblogic/</guid>
      <description>
        
          
            前言 最近發現某個 WebLogic 的 JDBC connection 只會增加, 不會減少, 意思是說, 程式和 WebLogic 拿了很多 JDBC connection, 但是都沒有還給系統. 在程式執行一段時間之後, 就會拿不到 JDBC connection 了, 然後
          
          
        
      </description>
    </item>
    
    <item>
      <title>Command Line Deploy on NetWeaver</title>
      <link>https://dennys.github.io/tw/200903/command-line-deploy-on-netweaver/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/tw/200903/command-line-deploy-on-netweaver/</guid>
      <description>
        
          
            前言 要把 ear 檔給 deploy 到 NetWeaver, 標準的作法應該是使用 SDM Remote GUI Client , 使用上是不困難, 但有幾個缺點: 雖然說是 Remote GUI, 但是基本上你的環境得有安裝 NetWeaver 才行, 也不知道能不能
          
          
        
      </description>
    </item>
    
    <item>
      <title>Command Line Deploy on WebLogic</title>
      <link>https://dennys.github.io/tw/200903/command-line-deploy-on-weblogic/</link>
      <pubDate>Sat, 21 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://dennys.github.io/tw/200903/command-line-deploy-on-weblogic/</guid>
      <description>
        
          
            前言 在 ear 檔愈長愈大之後 (30mb左右), deploy 程式變成一個有點累的動作, 因為 Ant 只能做到把 ear 檔給 build 好, 之後的動作 (開 browser, login, deploy, active, start ap, ...) 需要不少時間, 不
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
