<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>CI/CD - Tag - Dennys Diary</title>
        <link>https://dennys.github.io/tags/ci/cd/</link>
        <description>CI/CD - Tag - Dennys Diary</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><atom:link href="https://dennys.github.io/tags/ci/cd/" rel="self" type="application/rss+xml" /><item>
    <title>Use GitLab to do .NET 4.X CI/CD</title>
    <link>https://dennys.github.io/2022/03/gitlab-dotnet4-ci-cd/</link>
    <pubDate>Fri, 25 Mar 2022 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/2022/03/gitlab-dotnet4-ci-cd/</guid>
    <description><![CDATA[<h2 id="precondition">Precondition</h2>
<p>You already have a GitLab (<a href="http://gitlab.com/" target="_blank" rel="noopener noreffer">GitLab Saas</a> or GitLab self managed). This document is for .NET 4.X, if you want to build .NET core or .NET 5/6/7/&hellip;, you can use docker to run GitLab Runner.</p>
<h3 id="step-1---install-git-client">Step 1 - Install Git client</h3>
<p>Download and install <a href="https://git-scm.com/download/win" target="_blank" rel="noopener noreffer">Git for Windows</a>. Portable version is ok, but because Git Runner is a Windows service, please add git.exe into PATH.</p>
<h3 id="step-2---prepare-net-build-environment">Step 2 - prepare .NET build environment</h3>
<p>Download and install <a href="https://visualstudio.microsoft.com/" target="_blank" rel="noopener noreffer">Visual Studio</a>. (Please let me know if I can build a .NET build environment without Visual Studio, thanks.)</p>
<h3 id="step-3---install-gitlab-runner">Step 3 - Install GitLab Runner</h3>
<ol>
<li>
<p>Download <a href="https://docs.gitlab.com/runner/install/windows.html" target="_blank" rel="noopener noreffer">GitLab Runner</a></p>
</li>
<li>
<p>Rename <em><strong>gitlab-runner-windows-amd64.exe</strong></em> to <em><strong>gitlab-runner.exe</strong></em></p>
</li>
<li>
<p>Get the token to run GitLab Runner
</p>
</li>
<li>
<p>Generate GitLab Runner configuration file (config.toml)</p>
<ol>
<li>Run the command
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">gitlab-runner.exe register --url https://gitlab.com/ --registration-token $REGISTRATION_TOKEN
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ol>
</li>
<li>
<p>Modify config.toml</p>
<ol>
<li>Because Gitlab Runner doesn&rsquo;t suppoer Windows shell after version 13, you need to use PowerShell. If you use Power Shell, please open config.toml and rename &lsquo;pwsh&rsquo; to &lsquo;powershell&rsquo;. (If you use <a href="https://github.com/PowerShell/PowerShell" target="_blank" rel="noopener noreffer">Power Shell Core</a>, you don&rsquo;t need to do anything)</li>
<li>If you use a portable Git, you need to modify <code>$env:Path</code> of PowerShell.</li>
<li>If you find your log is garbled (ex: your Windows server is not English version), please add <code>chcp 65001</code> to change the encoding to UTF-8.</li>
</ol>
</li>
<li>
<p>Register GitLab Runner as a Windows service and start it.</p>
<ol>
<li>Run the command <code>gitlab-runner install</code> to install as a Windows service.</li>
<li>Run the command <code>gitlab-runner start</code> to start the service.</li>
</ol>
</li>
<li>
<p>config.toml sample =&gt; <mark style="background-color:#ff675f;" class="has-inline-color">remember, if you modify the file, please execute <code>gitlab-runner.exe restart</code> to restart GitLab runner.</mark></p>
</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">concurrent = 1
</span></span><span class="line"><span class="cl">check_interval = 0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[session_server]
</span></span><span class="line"><span class="cl">  session_timeout = 1800
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[[runners]]
</span></span><span class="line"><span class="cl">  name = &#34;GitLab Runner 007&#34;
</span></span><span class="line"><span class="cl">  url = &#34;https://gitlab.com/&#34;
</span></span><span class="line"><span class="cl">  token = &#34;******************&#34;
</span></span><span class="line"><span class="cl">  executor = &#34;shell&#34;
</span></span><span class="line"><span class="cl">  shell = &#34;powershell&#34;
</span></span><span class="line"><span class="cl">  pre_clone_script = &#34;&#34;&#34;
</span></span><span class="line"><span class="cl">      chcp 65001
</span></span><span class="line"><span class="cl">      $env:Path += &#34;;C:\\Gitlab\\PortableGit\\cmd&#34;
</span></span><span class="line"><span class="cl">  &#34;&#34;&#34;
</span></span><span class="line"><span class="cl">  [runners.custom_build_dir]
</span></span><span class="line"><span class="cl">  [runners.cache]
</span></span><span class="line"><span class="cl">    [runners.cache.s3]
</span></span><span class="line"><span class="cl">    [runners.cache.gcs]
</span></span><span class="line"><span class="cl">    [runners.cache.azure]
</span></span></code></pre></td></tr></table>
</div>
</div><p>If you always see the Credential Helper Selector, please choose &ldquo;no helper&rdquo; and &ldquo;Always use this from now on&rdquo;.</p>
<p><a href="https://dennys.files.wordpress.com/2021/12/image-4.png"></a></p>
<h3 id="step-4---write-gitlab-ciyml">Step 4 - Write .gitlab-ci.yml</h3>
<ol>
<li>Edit .gitlab-ci.yml, the following is a sample:</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">stages:
</span></span><span class="line"><span class="cl">    - build
</span></span><span class="line"><span class="cl">    - test
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">build:
</span></span><span class="line"><span class="cl">    stage: build
</span></span><span class="line"><span class="cl">    script:
</span></span><span class="line"><span class="cl">        - &#34;dotnet build&#34;
</span></span><span class="line"><span class="cl">    artifacts:
</span></span><span class="line"><span class="cl">      paths:
</span></span><span class="line"><span class="cl">        - .\test
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">test:
</span></span><span class="line"><span class="cl">    stage: test
</span></span><span class="line"><span class="cl">    script: 
</span></span><span class="line"><span class="cl">        - &#34;dotnet test&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="step-5---start-to-buildtestdeploy-code-local-machine">Step 5 - Start to build/test/deploy code (local machine)</h3>
<p>Change directory to the location of .gitlab-ci.yml and execute this command</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">gitlab-runner.exe exec shell build
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="step-6---start-to-test-cicd-local-machine">Step 6 - Start to test CI/CD (local machine)</h3>
<p>If everything is ok, you can commit .gitlab-ci.yml and GitLab should run it automatically.</p>
<h3 id="sast-static-application-security-testing">SAST (Static Application Security Testing)</h3>
<p>GitLab can check your source code for known vulnerabilities, unfortunately, it only support Linux container, Windows containers are not yet supported. (reference: <a href="https://docs.gitlab.com/ee/user/application_security/sast/" target="_blank" rel="noopener noreffer">https://docs.gitlab.com/ee/user/application_security/sast/</a>)</p>
]]></description>
</item>
</channel>
</rss>
