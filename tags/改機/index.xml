<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>改機 - Tag - Dennys Diary</title>
        <link>https://dennys.github.io/tags/%E6%94%B9%E6%A9%9F/</link>
        <description>改機 - Tag - Dennys Diary</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 02 Jun 2022 22:18:32 &#43;0800</lastBuildDate><atom:link href="https://dennys.github.io/tags/%E6%94%B9%E6%A9%9F/" rel="self" type="application/rss+xml" /><item>
    <title>更新 Unlock 過的 Pixel 5</title>
    <link>https://dennys.github.io/202206/update-unlocked-pixel5/</link>
    <pubDate>Thu, 02 Jun 2022 22:18:32 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/202206/update-unlocked-pixel5/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>Pixel 5 在 Unlock 之後, 自動更新就失效了, 得手動更新, 方法如下.</p>
<h2 id="事前準備">事前準備</h2>
<ol>
<li>下載
<ol>
<li><a href="https://developers.google.com/android/ota" target="_blank" rel="noopener noreffer">Pixel OTA Images</a></li>
<li><a href="https://developers.google.com/android/images" target="_blank" rel="noopener noreffer">Pixel Factory Images</a></li>
</ol>
</li>
<li>把redfin-sq1a.220205.002-factory-734556ab.zip (檔案名稱看實際的版本) 解壓縮, 要解兩層, 直到解出 boot.img</li>
<li>利用 Magisk 修補 boot.img, 產生的檔案名稱長類似這樣 magisk_patched-24201_LSQ4E.img, 再把這個檔案傳回電腦中</li>
<li>進入開發者模式並確定 adb devices 可以連</li>
</ol>
<p><a href="https://dennys.files.wordpress.com/2022/01/auth.jpg"></a>
<br></p>
<h2 id="更新步驟">更新步驟</h2>
<ol>
<li>
<p>執行以下指令重新開機進入sideload mode</p>
<p><code>adb reboot sideload</code></p>
</li>
<li>
<p>刷入安全性更新檔案, 這個步驟會比較久</p>
<p><code>adb sideload redfin-ota-sq1a.220205.002-84ba2421.zip</code></p>
</li>
<li>
<p>完成上傳後<strong><mark style="background-color:rgba(0, 0, 0, 0);" class="has-inline-color has-vivid-red-color">勿重新開機，&ldquo;在手機上&rdquo; 選擇Reboot to bootloader</mark></strong></p>
</li>
<li>
<p>刷入被 Magisk 修補後的 boot.img</p>
<p><code>fastboot flash boot --slot=all magisk_patched-24201_LSQ4E.img</code></p>
</li>
<li>
<p>執行以下指令重新開機</p>
<p><code>fastboot reboot</code></p>
</li>
<li>
<p>進入 設定-&gt;關於-&gt;Android 版本, 確定有更新成功.</li></ol></p>
</li>
</ol>
<h2 id="參考">參考</h2>
<ol>
<li><a href="https://forum.xda-developers.com/t/4356219/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/t/4356219/</a></li>
<li><a href="https://www.mobile01.com/topicdetail.php?f=565&amp;t=6487485" target="_blank" rel="noopener noreffer">https://www.mobile01.com/topicdetail.php?f=565&t=6487485</a></li>
</ol>
]]></description>
</item>
<item>
    <title>Android 11 如何不要驗證 Wi-Fi CA 憑證</title>
    <link>https://dennys.github.io/202203/add-do-not-validate-android-11-peap-mschapv2-wifi/</link>
    <pubDate>Fri, 25 Mar 2022 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/202203/add-do-not-validate-android-11-peap-mschapv2-wifi/</guid>
    <description><![CDATA[<p><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-vivid-red-color"><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></mark></p>
<p><strong><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-luminous-vivid-amber-color">注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</mark></strong></p>
<p><strong><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-luminous-vivid-orange-color">注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</mark></strong></p>
<p>======================================================</p>
<h2 id="更新紀錄">更新紀錄</h2>
<ol>
<li>2022/05/30: 新增系統更新或 Wi-Fi 密碼修改後的處理方式</li>
</ol>
<h2 id="wi-fi-ca-憑證驗證在-android-11-的改變">Wi-Fi CA 憑證驗證在 Android 11 的改變</h2>
<p>Android 10 以前, 如果是連到 Enterprise Wi-Fi (EAP/PEAP), CA 憑證是可以選 &ldquo;不要驗證&rdquo;, 如下:</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-13.png"></a></p>
<p>自 Android 11 起, 如果是連到 Enterprise Wi-Fi (PEAP), CA 憑證就無法選 &ldquo;不要驗證&rdquo;, 原因可參考 <a href="https://www.xda-developers.com/android-11-break-enterprise-wifi-connection/" target="_blank" rel="noopener noreffer">https://www.xda-developers.com/android-11-break-enterprise-wifi-connection/</a>. 這個方向是對的, 但如果網管不改, 一般使用者恐怕也無能為力. (<mark style="background-color:rgba(0, 0, 0, 0);" class="has-inline-color has-vivid-red-color">而且 iPhone 至少到 15.4 都沒有卡這個&hellip;</mark>)</p>
<p>爬了一下文, 看來是可以直接把這個設定加回去 (參考: <a href="https://android.stackexchange.com/questions/231859/%29" target="_blank" rel="noopener noreffer">https://android.stackexchange.com/questions/231859/)</a>, 但很不幸的, 檔案是放在 /data/misc/apexdata/com.android.wifi/WifiConfigStore.xm, 這裡的檔案<mark style="background-color:rgba(0, 0, 0, 0);" class="has-inline-color has-vivid-red-color">必須 Unlock 才能修改</mark>. 文章裡面是寫有可能透過 App 修改, 但我沒找到方法, 如果有人找到好方法了, 也麻煩分享一下.</p>
<h2 id="修改步驟">修改步驟</h2>
<ol>
<li>
<p>首先, 要 Unlock, Pixel 5 (Android 12) 可參考 <a href="https://dennys.github.io/zh-tw/2022/03/google-pixel-5-root-magisk" target="_blank" rel="noopener noreffer">https://dennys.github.io/zh-tw/2022/03/google-pixel-5-root-magisk</a>. (要做到把 boot.img 換掉)</p>
</li>
<li>
<p>試著連上 Wi-Fi, 網域就隨便給他寫, 然後試著連線, 這<mark style="background-color:rgba(0, 0, 0, 0);" class="has-inline-color has-vivid-red-color">當然是不會成功</mark>, 目的只是要先寫入一版 Config 檔案, 等一下可以修改.</p></p>
</li>
</ol>
<p><a href="https://dennys.files.wordpress.com/2022/02/1-1.png"></a></p>
<ol start="3">
<li>先用下列指令檢查 WifiConfigStore.xml 是否正確, 這裡也可以用 adb pull 拉到電腦檢查, 但我一直沒成功, 就先用 cat 看. 若執行時發生</p></li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb shell
</span></span><span class="line"><span class="cl">su
</span></span><span class="line"><span class="cl">cat /data/misc/apexdata/com.android.wifi/WifiConfigStore.xml
</span></span></code></pre></td></tr></table>
</div>
</div><p>若執行 su 時發生 inaccessible or not found (如下), 通常是 root 沒成功, 請再確認一次 root 步驟.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">127|redfin:/system/bin $ su
</span></span><span class="line"><span class="cl">/system/bin/sh: su: inaccessible or not found
</span></span></code></pre></td></tr></table>
</div>
</div><p>讀出來的 WifiConfigStore.xml 內容如下, 可找 WifiEnterpriseConfiguration 這個關鍵字, 目的是要把紅色的設定值拿掉</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;WifiEnterpriseConfiguration&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Identity&#34;&gt;這裡是帳號名字&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;AnonIdentity&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Password&#34;&gt;這裡是密碼&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;ClientCert&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;CaCert&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;SubjectMatch&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Engine&#34;&gt;0&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;EngineId&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;PrivateKeyId&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;AltSubjectMatch&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;DomSuffixMatch&#34;&gt;這裡是上面隨便輸入的網域&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;CaPath&#34;&gt;/system/etc/security/cacerts&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;int name=&#34;EapMethod&#34; value=&#34;0&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;int name=&#34;Phase2Method&#34; value=&#34;4&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;PLMN&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Realm&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;int name=&#34;Ocsp&#34; value=&#34;0&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;WapiCertSuite&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;boolean name=&#34;AppInstalledRootCaCert&#34; value=&#34;false&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;boolean name=&#34;AppInstalledPrivateKey&#34; value=&#34;false&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;null name=&#34;KeyChainAlias&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;null name=&#34;DecoratedIdentityPrefix&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;/WifiEnterpriseConfiguration&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="4">
<li>執行以下指令 (這指令是直接從上面那篇 stackexchange 抄過來的), 他就會把 <code>CaPath</code> 和 <code>DomSuffixMatch</code> 的內容改成空白. 最後一個步驟會重開, <em><strong>要重開才會生效</strong></em>.</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb shell
</span></span><span class="line"><span class="cl">su
</span></span><span class="line"><span class="cl">sed -i &#39;s%&amp;lt;string name=&#34;CaPath&#34;&amp;gt;.*&amp;lt;/string&amp;gt;%&amp;lt;string name=&#34;CaPath&#34;&amp;gt;&amp;lt;/string&amp;gt;%&#39; /data/misc/apexdata/com.android.wifi/WifiConfigStore.xml
</span></span><span class="line"><span class="cl">sed -i &#39;s%&amp;lt;string name=&#34;DomSuffixMatch&#34;&amp;gt;.*&amp;lt;/string&amp;gt;%&amp;lt;string name=&#34;DomSuffixMatch&#34;&amp;gt;&amp;lt;/string&amp;gt;%&#39; /data/misc/apexdata/com.android.wifi/WifiConfigStore.xml
</span></span><span class="line"><span class="cl">reboot
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="5">
<li>重開完後, 檢查 <code>/data/misc/apexdata/com.android.wifi/WifiConfigStore.xml</code> 的內容, 確認下面紅色這段的設定被清空了</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;WifiEnterpriseConfiguration&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Identity&#34;&gt;這裡是帳號名字&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;AnonIdentity&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Password&#34;&gt;這裡是密碼&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;ClientCert&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;CaCert&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;SubjectMatch&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Engine&#34;&gt;0&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;EngineId&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;PrivateKeyId&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;AltSubjectMatch&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;DomSuffixMatch&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;CaPath&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;int name=&#34;EapMethod&#34; value=&#34;0&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;int name=&#34;Phase2Method&#34; value=&#34;4&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;PLMN&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Realm&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;int name=&#34;Ocsp&#34; value=&#34;0&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;string name=&#34;WapiCertSuite&#34;&gt;&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;boolean name=&#34;AppInstalledRootCaCert&#34; value=&#34;false&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;boolean name=&#34;AppInstalledPrivateKey&#34; value=&#34;false&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;null name=&#34;KeyChainAlias&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;null name=&#34;DecoratedIdentityPrefix&#34; /&gt;
</span></span><span class="line"><span class="cl">&lt;/WifiEnterpriseConfiguration&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="6">
<li>
<p>這時候應該就可以連線了</p>
</li>
<li>
<p>因為實際上並不需要 root, 只是為了修改 WifiConfigStore.xml, 因此改完後可以 UnRoot (移除 Magisk 和刷回原廠 boot.img), 但因為解鎖會清空資料, 而且下次又遇到新的 Wi-Fi 又得重來, 我就維持解鎖狀態了. 方法可參考 <a href="https://dennys.github.io/zh-tw/202203/android-remove-root-magisk/" target="_blank" rel="noopener noreffer">https://dennys.github.io/zh-tw/202203/android-remove-root-magisk/</a></p>
</li>
</ol>
<h2 id="系統更新後如何處理">系統更新後如何處理?</h2>
<p>不用處理, 至少目前我的 Pixel 5 更新到 2022 年 5 月更新 (12.1.0 (SP2A.220505.002, May 2022) 時, 都不需要處理.</p>
<h2 id="wi-fi-密碼更新後如何處理">Wi-Fi 密碼更新後如何處理?</h2>
<ol>
<li>如果系統有更新過, 就得先用 Magisk 重新 patch 一次.</li>
<li>一樣要試著連線 (當然不會成功), 重點是把密碼寫進去.</li>
<li>然後再用 adb shell 跑一次上面的 sed 指令修改 WifiConfigStore.xml 即可.</li>
</ol>
<h2 id="後記">後記</h2>
<p>這個方法並不是把不要驗證 (Do Not Validate) 的設定加回去, 而是先嘗試連線一個要驗證的 Wi-Fi (當然這裡會失敗), 等他把設定檔存下來之後, 再進系統把憑證的設定改掉, 所以還是和 Android 10 以前不太一樣. 而且 <em><strong>每次連上一個新的要使用 EAP 的 Wi-Fi 基地台都要重新執行一次</strong></em> , 會比較麻煩.</p>
]]></description>
</item>
<item>
    <title>Android 移除 Root 和 Magisk</title>
    <link>https://dennys.github.io/202203/android-remove-root-magisk/</link>
    <pubDate>Fri, 25 Mar 2022 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/202203/android-remove-root-magisk/</guid>
    <description><![CDATA[<p><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-vivid-red-color"><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></mark></p>
<p><strong><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-luminous-vivid-amber-color">注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</mark></strong></p>
<p><strong><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-luminous-vivid-orange-color">注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</mark></strong></p>
<p>======================================================</p>
<h2 id="需求">需求</h2>
<p>在上次這篇 <a href="http://localhost:1313/zh-tw/posts/202203/add-do-not-validate-android-11-peap-mschapv2-wifi/" target="_blank" rel="noopener noreffer">Android 11 如何不要驗證 Wi-Fi CA 憑證</a> 有說明如何修改系統設定檔, 修改完後, 其實就不需要 Root 了, 因此可以 UnRoot. 方法如下:</p>
<p>1. 將手機重開, 並同時按下 電源+音量下鍵進入 bootloader 模式</p>
<p>2. 用 fastboot 刷回原始的 boot.img</p>
<pre class="wp-block-code"><code>fastboot boot boot.img</code></pre>
<p>2.1 其實 Magisk 有這個功能刷回原始的 boot.img</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-3.png"></a></p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-4.png"></a></p>
<p>2.2 但我實測按下還原原始映像檔是沒作用的, 所以只好自己刷</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-5.png"></a></p>
<p>3. 刷回原來的 boot.img 之後, 絕大多數 App 都可以用了, 不過實測發現沒有移除 Magisk, 還是有某些 App 譬如 Costco 或國泰世華銀行無法使用, 所以最後還是把 Magisk 移除. 但手機還是維持在 Unlock 狀態.</p>
]]></description>
</item>
<item>
    <title>Samsung Galaxy S7 Edge 刷 LineageOS</title>
    <link>https://dennys.github.io/202203/samsung-galaxy-s7-edge-lineageos/</link>
    <pubDate>Fri, 25 Mar 2022 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/202203/samsung-galaxy-s7-edge-lineageos/</guid>
    <description><![CDATA[<p><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-vivid-red-color"><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></mark></p>
<p><strong><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-luminous-vivid-amber-color">注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</mark></strong></p>
<p><strong><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-luminous-vivid-orange-color">注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</mark></strong></p>
<p>======================================================</p>
<h2 id="需求">需求</h2>
<p>Samsung Galaxy S7 Edge 是 2016 年初的手機, 最多可更新到 Android 8, 最後的 patch 是 2020 年 9 月.</p>
<p>可以刷的 ROM 看來有很多 (可參考 <a href="https://forum.xda-developers.com/f/5186/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/f/5186/</a>)</p>
<p>*最有名的 LineageOS 15~19 (Android 8~12)
*FloydQ: 這是基於 Android 10 的 Samsung OneUI 2.5, 這應該是可以用到比較多 Samsung 手機特有的功能</p>
<h2 id="作法">作法</h2>
<h3 id="請先在電腦安裝以下兩個程式">請先在電腦安裝以下兩個程式</h3>
<ol>
<li>Samsung USB driver: <a href="http://developer.samsung.com/galaxy/others/android-usb-driver-for-windows" target="_blank" rel="noopener noreffer">http://developer.samsung.com/galaxy/others/android-usb-driver-for-windows</a></li>
<li>ODIN: <a href="https://odindownloader.com/" target="_blank" rel="noopener noreffer">https://odindownloader.com/</a></li>
</ol>
<h3 id="下載-lineageos-和-open-gapps">下載 LineageOS 和 Open GApps</h3>
<ol>
<li>LineageOS 19: <a href="https://forum.xda-developers.com/t/4369001/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/t/4369001/</a></li>
<li>LineageOS 18: <a href="https://forum.xda-developers.com/t/4172727/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/t/4172727/</a></li>
<li>Open Gapps: <a href="https://sourceforge.net/projects/opengapps/files/arm64/" target="_blank" rel="noopener noreffer">https://sourceforge.net/projects/opengapps/files/arm64/</a> =&gt; 注意, 這有綁 OS 版本, 在 2022/2/15 的版本還沒有支援 Android 12.</li>
</ol>
<h3 id="下載-twrp">下載 TWRP</h3>
<p><a href="https://dl.twrp.me/hero2lte/twrp-3.6.0_9-0-hero2lte.img.tar.html" target="_blank" rel="noopener noreffer">https://dl.twrp.me/hero2lte/twrp-3.6.0_9-0-hero2lte.img.tar.html</a>, 注意, 一開始使用 3.1.1 版, 結果都讀不到 SD card, 升到最新版後就好了.</p>
<h3 id="安裝-twrp">安裝 TWRP</h3>
<ol>
<li>開啟工程模式
<ol>
<li>設定→關於裝置→軟體資訊→版本號碼處連點8下</li>
<li>進入開發人員選項後，USB偵錯以及OEM解鎖選項要打勾。</li>
</ol>
</li>
<li>重開機進入 download mode
<ol>
<li>執行 ODIN, 把剛才的 twrp 給刷進去, 再重開就可以了</li>
</ol>
</li>
</ol>
<h3 id="刷-lineageos-和-open-gapps">刷 LineageOS 和 Open Gapps</h3>
<p>執行 adb reboot recovery 或是先關機, 然後按音量上+Home+Power 鍵進入 TWRP Recovery. 選 INSTALL, 把LineageOS 和 Open Gapps 的 zip 檔案裝上去, 重開機就可以了.</p>
<p>如果要用 ADB, 指令如下:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb sideload open_gapps-arm64-11.0-nano-20220202.zip
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="twrp-被-lineageos-recovery-蓋掉的問題">TWRP 被 LineageOS Recovery 蓋掉的問題</h2>
<p>自 LineageOS 17 開始, 他自己有帶一個 Recovery, 嘗試刷回 TWRP 又常常失敗.</p>
<p>可試試看 <a href="https://forum.xda-developers.com/t/3334084/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/t/3334084/</a> 的 step 6~8</p>
<p>=================================================</p>
<h2 id="nikgapps-測試-失敗">NikGapps 測試 (失敗)</h2>
<p>一開始用 LineageOS 自己的 Recovery, 刷 NikGapps 一直失敗</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb sideload NikGapps-basic-arm64-12-20211224-signed.zip
</span></span><span class="line"><span class="cl">adb: sideload connection failed: closed
</span></span><span class="line"><span class="cl">adb: trying pre-KitKat sideload method…
</span></span><span class="line"><span class="cl">adb: pre-KitKat sideload connection failed: closed
</span></span></code></pre></td></tr></table>
</div>
</div><p>用以下指令可解決</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">C:\platform-tools\fastboot devices
</span></span><span class="line"><span class="cl">C:\platform-tools\adb usb
</span></span><span class="line"><span class="cl">C:\platform-tools\adb sideload NikGapps-basic-arm64-12-20211224-signed.zip
</span></span><span class="line"><span class="cl">serving: &#39;NikGapps-basic-arm64-12-20211224-signed.zip&#39; (~32%)
</span></span></code></pre></td></tr></table>
</div>
</div><p>但最後又一直卡在空間不足, 就放棄了.</p>
]]></description>
</item>
<item>
    <title>Google Pixel 5 Root &amp; Magisk</title>
    <link>https://dennys.github.io/202203/google-pixel-5-root-magisk/</link>
    <pubDate>Wed, 16 Mar 2022 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/202203/google-pixel-5-root-magisk/</guid>
    <description><![CDATA[<p><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-vivid-red-color"><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></mark></p>
<p><strong><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-luminous-vivid-amber-color">注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</mark></strong></p>
<p><strong><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-luminous-vivid-orange-color">注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</mark></strong></p>
<p>======================================================</p>
<h2 id="環境準備">環境準備</h2>
<h3 id="安裝-google-usb-driver">安裝 Google USB driver</h3>
<ol>
<li>首先要在電腦上安裝 Google USB driver, 可在<a href="https://developer.android.com/studio/run/win-usb" target="_blank" rel="noopener noreffer">這裡</a>下載</li>
<li>解開壓縮檔 (應該是 usb_driver_r13-windows.zip), 在 android_winusb.inf 按右鍵, 然後一直往下就好了</li>
</ol>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-11.png"></a></p>
<p>ps: 沒有裝 driver 的話, 在執行 fastboot 的時候, 就會遇到 waiting for any device 的訊息, 如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">C:\platform-tools&gt;fastboot boot magisk_patched.img
</span></span><span class="line"><span class="cl">&lt; waiting for any device &gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>===================================================</p>
<h3 id="安裝-android-sdk-platform-tools">安裝 Android SDK Platform Tools</h3>
<p>從這裡下載, 一直 next next 就好.</p>
<p><a href="https://developer.android.com/studio/releases/platform-tools#downloads" target="_blank" rel="noopener noreffer">https://developer.android.com/studio/releases/platform-tools#downloads</a></p>
<p>===================================================</p>
<h2 id="手機解鎖-unlock">手機解鎖 Unlock</h2>
<p><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-vivid-red-color"><strong>請記得先備份資料, 因為解鎖會清空資料</strong></mark></p>
<p><strong><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-luminous-vivid-orange-color">請記得先備份資料, 因為解鎖會清空資料</mark></strong></p>
<p><strong><mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-luminous-vivid-orange-color">請記得先備份資料, 因為解鎖會清空資料</mark></strong></p>
<ol>
<li>手機進入開發者模式並確定 adb devices 可以連上手機</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">C:\platform-tools&gt;adb devices
</span></span><span class="line"><span class="cl">List of devices attached
</span></span><span class="line"><span class="cl">*************** device
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>Enable OEM 解鎖</li>
</ol>
<p></p>
<ol start="3">
<li>執行下列指令, 手機會出現要你確認是否要 unlock, 按下去, 手機就解鎖了. <mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-vivid-red-color"><strong><span style="text-decoration:underline;">注意: 這裡會把手機資料清空</span></strong></mark>&lt;</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">C:\platform-tools&gt;adb reboot bootloader
</span></span><span class="line"><span class="cl">C:\platform-tools&gt;fastboot flashing unlock
</span></span><span class="line"><span class="cl">OKAY [  0.068s]
</span></span><span class="line"><span class="cl">Finished. Total time: 0.071s
</span></span></code></pre></td></tr></table>
</div>
</div><p>=============== 以上完成 Unlock, 以下為 Root 的步驟 ===============</p>
<h2 id="手機-root">手機 Root</h2>
<p>1. 用手機下載並安裝 Magisk <s>(https://github.com/topjohnwu/magisk_files/blob/canary/app-debug.apk)</s> (更新: 請改從這裡抓 https://magiskmanager.com/</p>
<p>2.1 檢查手機版本 (設定 -&gt; 關於, 然後拉到最下面), 譬如我這支是 SQ1A.220105.002</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-2.png"></a></p>
<p>2.2 用電腦連到 https://developers.google.com/android/images, 下載對應的 boot image (按 Link) </p>
<p><a href="https://dennys.files.wordpress.com/2022/01/image-17.png"></a></p>
<p>2.3 解開裡面的 vbmega.img 和 boot.img. </p>
<p><a href="https://dennys.files.wordpress.com/2022/01/image-16.png"></a></p>
<p>3. 將前一步驟解出來的 boot.img 放到手機上, 然後使用 Magisk 對 boot.img 做 patch, 並把 patch 完後的檔案傳回電腦</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image.png"></a></p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-1.png"></a></p>
<p>4. 將手機重開, 並同時按下 電源+音量下鍵進入 bootloader 模式</p>
<p>5.1 用 fastboot 刷 vbmega.img, 不然刷完後重開機, 手機會出現 failed to load/verify boot images (應該是 Pixel 4A 5G 以後的都需要這個)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">C:\platform-tools&gt;fastboot flash --disable-verity --disable-verification vbmeta vbmeta.img
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://dennys.files.wordpress.com/2022/01/image-15.png"></a></p>
<p>5.2 用 fastboot 刷剛剛用 Magisk 給 patch 過的 image. 注意, <mark style="background-color:rgba(0,0,0,0);" class="has-inline-color has-luminous-vivid-orange-color">這裡用的是 fastboot boot, 不是 fastboot flash</mark>. 刷完以後會自動重開機.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">fastboot boot magisk_patched.img
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://dennys.files.wordpress.com/2022/01/image-14.png"></a></p>
<p>6. 使用 Magisk 檢查是否 Root</p>
<p>若你的 Masgisk 長這樣</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-6.png"></a></p>
<p>然後執行時出現這個畫面, 這時候按確定, 他應該會去嘗試下載, 然後最後說剖析套件時發生問題.</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-7.png"></a></p>
<p>還是得裝前面講的版本 (https://github.com/topjohnwu/magisk_files/blob/canary/app-debug.apk), 執行後看到下面畫面, 就是 Root 成功了.</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-3.png"></a></p>
<p>7. Root 之後可再刷第三方 ROM, Pixel5 有一堆可刷, 可參考 https://forum.xda-developers.com/f/11343/. 比較意外的是, 本來以為最多人用的是 <a rel="noreferrer noopener" href="https://www.google.com/search?q=LineageOS" target="_blank">LineageOS</a>, 不過看來 <a rel="noreferrer noopener" href="https://www.google.com/search?q=ProtonASOP" target="_blank">ProtonASOP</a> 受到的關注更多 (以 XDA 上面的 views/replies 數量來看). 還有 <a rel="noreferrer noopener" href="https://forum.xda-developers.com/t/4192641/" target="_blank">CleanSlate</a> 在沒有 Root 的情況下也可以使用, 這個值得研究一下.</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-9.png"></a></p>
<h2 id="參考">參考:</h2>
<ol>
<li><a href="https://www.mobile01.com/topicdetail.php?f=565&amp;amp;t=6233575" target="_blank" rel="noopener noreffer">https://www.mobile01.com/topicdetail.php?f=565&amp;t=6233575</a> (這篇是 Pixel 4XL, 所以不需要 vbmega.img)</li>
<li><a href="https://www.droidwin.com/how-to-root-pixel-devices-via-magisk-on-android-12/" target="_blank" rel="noopener noreffer">https://www.droidwin.com/how-to-root-pixel-devices-via-magisk-on-android-12/</a></li>
<li><a href="https://android.gadgethacks.com/how-to/root-pixel-5-still-pass-safetynet-full-guide-for-beginners-intermediate-users-0348101/" target="_blank" rel="noopener noreffer">https://android.gadgethacks.com/how-to/root-pixel-5-still-pass-safetynet-full-guide-for-beginners-intermediate-users-0348101/</a></li>
</ol>
]]></description>
</item>
<item>
    <title>如何還原 Android 12 的 Wi-Fi / 行動數據 快速開關 (免 Root)</title>
    <link>https://dennys.github.io/202201/android-12-wifi-mobile-data-toggles/</link>
    <pubDate>Fri, 28 Jan 2022 18:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/202201/android-12-wifi-mobile-data-toggles/</guid>
    <description><![CDATA[<h2 id="需求">需求</h2>
<p>在 Android 11 以前, 只要從手機上面往下滑, 就可以看到快速開關來切換很多設定.</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/old.png" target="_blank" rel="noopener noreffer"></a></p>
<p>但自 Android 12 開始, Wi-Fi 和行動數據的開關被整合成一個網際網路開關, 如下圖.</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/internet.png" target="_blank" rel="noopener noreffer"></a></p>
<p>所以要改變 Wi-Fi 或行動數據時, 得先進去網際網路, 然後才能修改, 改完之後還得去按那個完成. 這真的很難用也很慢&hellip;</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/internet2.png" target="_blank" rel="noopener noreffer"></a></p>
<p>而且這個改變看來 Google 是有做過研究的, 可參考 <a href="https://support.google.com/pixelphone/thread/132446941/" target="_blank" rel="noopener noreffer">https://support.google.com/pixelphone/thread/132446941/</a>. 他的原因是很多人會因為 Wi-Fi 不穩定而改用行動數據, 然後忘了開回 Wi-Fi&hellip; 雖然我不是很懂這個改變能怎麼避免這件事情. (後面的留言也滿多人反映同樣事情)</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/internet3.jpg" target="_blank" rel="noopener noreffer"></a></p>
<p>再往下看, 負評的人不少, 所以我也給他按負評了 :p</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/image-10.png" target="_blank" rel="noopener noreffer"></a></p>
<p>不過客服也辛苦了, 被人抱怨 this sucks, 還會回 You&rsquo;re welcome&hellip; (參考論壇: <a href="https://support.google.com/pixelphone/thread/133649087/%29" target="_blank" rel="noopener noreffer">https://support.google.com/pixelphone/thread/133649087/)</a>.</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/image-11.png" target="_blank" rel="noopener noreffer"></a></p>
<p><br><br></p>
<h2 id="解法-免-root">解法 (免 root)</h2>
<p>網路上找到解法如下 (參考 <a href="https://forum.xda-developers.com/t/4353717/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/t/4353717/</a> 和 <a href="https://9to5google.com/2021/12/08/android-12-internet-wifi-mobile-data-toggles/%29" target="_blank" rel="noopener noreffer">https://9to5google.com/2021/12/08/android-12-internet-wifi-mobile-data-toggles/)</a>, 比較奇怪的是, XDA 上面說要 root, 但我沒 root 也成功了.</p>
<p><strong>要注意的是, 他會清除所有 toggle (就是說, 設完以後, 你的快速設定就只剩下 Wi-Fi 和行動數據兩個), 不過這再加回來就好了</strong>.</p>
<ol>
<li>安裝 ADB (在這裡下載 <a href="https://developer.android.com/studio/releases/platform-tools%29" target="_blank" rel="noopener noreffer">https://developer.android.com/studio/releases/platform-tools)</a>, 如果 adb.exe 執行起來一直 crash, 可用舊版 <a href="https://dl.google.com/android/repository/platform-tools_r28.0.0-windows.zip" target="_blank" rel="noopener noreffer">https://dl.google.com/android/repository/platform-tools_r28.0.0-windows.zip</a></li>
<li>打開手機的 USB debug mode (參考 <a href="https://blog.pulipuli.info/2019/01/adbfastbootandroid-sdk-platform-tools.html" target="_blank" rel="noopener noreffer">https://blog.pulipuli.info/2019/01/adbfastbootandroid-sdk-platform-tools.html</a>)</li>
<li>執行 <code>adb devices</code>, 確定手機有連線成功
<ul>
<li>如果 List of devices attached 後面沒東西代表沒找到手機 (那兩行 daemon&hellip; 只有第一次執行會出現)
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">C:\platform-tools&gt;adb devices
</span></span><span class="line"><span class="cl">* daemon not running; starting now at tcp:5037
</span></span><span class="line"><span class="cl">* daemon started successfully
</span></span><span class="line"><span class="cl">List of devices attached
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>如果看到 unauthorized 代表沒有權限 (可能是 USB debug mode 沒開)
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">C:\platform-tools&gt;adb devices
</span></span><span class="line"><span class="cl">List of devices attached
</span></span><span class="line"><span class="cl">*************** unauthorized
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>要看到這個畫面才代表連線成功
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">C:\platform-tools&gt;adb devices
</span></span><span class="line"><span class="cl">List of devices attached
</span></span><span class="line"><span class="cl">*************** device
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
<li>連線成功後, 請執行以下指令 (請用 cmd, 用 PowerShell 比較麻煩), 他就會把 Wi-Fi 和行動網路的快速設定分開來了
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb shell settings put global settings_provider_model false  
</span></span><span class="line"><span class="cl">adb shell settings put secure sysui_qs_tiles &#39;wifi,cell,$(settings get secure sysui_qs_tiles)&#39;  
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ol>
<br>
<h2 id="成果">成果</h2>
<p>如下, 可以快速開關 Wi-Fi 或是行動網路</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/new.png" target="_blank" rel="noopener noreffer"></a></p>
<p>最後請記得把 USB debug mode 關掉, 不然一些 App 會無法使用, 如下圖.</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/usb-1.png" target="_blank" rel="noopener noreffer"></a></p>
<h2 id="補充">補充</h2>
<ol>
<li>這招還是沒法改回 Android 11 以前那種小 icon, 也就是說, 預設最多只能看到 4 個開關. 是有看到 App 可以做到這功能, 但他看起來是用一個可以跑在其他 App 上的權限, 然後再加上一個從上往下滑的手勢. 也就是說, 當你從上往下滑, 其實是開啟他的 App, 而不是系統內建的通知功能. 所以其實會兩個一起執行, 這樣怪怪的&hellip; 再找找有沒有其他解法.</li>
<li>後來有次降版 Google App, 結果一連上藍芽就重開 (後來查到是降版造成, 更新到新版就好了), 但影響是所有 toggle 就又被重設了.</li>
</ol>
]]></description>
</item>
<item>
    <title>Asuswrt Merlin Diversion &#43; YouTube (分享器擋 YouTube 廣告)</title>
    <link>https://dennys.github.io/202006/asuswrt-merlin-diversion-youtube/</link>
    <pubDate>Wed, 10 Jun 2020 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/202006/asuswrt-merlin-diversion-youtube/</guid>
    <description><![CDATA[<h2 id="請先安裝-diversion">請先安裝 Diversion</h2>
<p>Diversion 安裝可參考: <a href="https://dennys.github.io/zh-tw/2020/01/asuswrt-merlin-diversion/" target="_blank" rel="noopener noreffer">https://dennys.github.io/zh-tw/2020/01/asuswrt-merlin-diversion/</a></p>
<h2 id="diversion-for-youtube">Diversion for YouTube</h2>
<p>自 2020/5/20 起, Diversion 新增擋 YouTube 廣告的實驗性功能 (參考: <a href="https://diversion.ch/faq-reader/can-diversion-block-youtube-ads.html" target="_blank" rel="noopener noreffer">https://diversion.ch/faq-reader/can-diversion-block-youtube-ads.html</a>)</p>
<h2 id="安裝方法">安裝方法</h2>
<ol>
<li>
<p>執行 b (blocking list)</p>
</li>
<li>
<p>執行 8 (YouTube video ads blocking) =&gt; 還是 experimental feature
</p>
</li>
<li>
<p>選擇 8 以後, 他會要你再確認一次</p>
 
</li>
<li>
<p>然後他就會開始安裝了, 如下</p>
 
</li>
<li>
<p>安裝好後一開始還是會有廣告, 之後就會愈來愈少了.</p>
</li>
</ol>
]]></description>
</item>
<item>
    <title>HTC U Ultra 刷機</title>
    <link>https://dennys.github.io/202001/htc-u-ultra-root/</link>
    <pubDate>Thu, 30 Jan 2020 08:04:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/202001/htc-u-ultra-root/</guid>
    <description><![CDATA[<h2 id="htc-u-ultra">HTC U Ultra</h2>
<p><a href="https://zh.m.wikipedia.org/zh-tw/HTC_U_Ultra" target="_blank" rel="noopener noreffer">HTC U Ultra</a> 是 2017 年初的手機, 可更新到 Android 8 (security patch 到 2018/3/1)</p>
<h2 id="root-方法">Root 方法</h2>
<ol>
<li>
<p>htc 官方解鎖 <a href="http://www.rayzen-dev.com/htc-unlocked-download/" target="_blank" rel="noopener noreffer">http://www.rayzen-dev.com/htc-unlocked-download/</a></p>
</li>
<li>
<p>安裝 htc driver <a href="https://drive.google.com/open?id=1sgIbTgW9PKXb9PKQ_PSzJxHkwc5tMV6Z" target="_blank" rel="noopener noreffer">https://drive.google.com/open?id=1sgIbTgW9PKXb9PKQ_PSzJxHkwc5tMV6Z</a></p>
</li>
<li>
<p>TWRP 可參考以下兩篇</p>
<ol>
<li><a href="https://www.ptt.cc/bbs/MobileComm/M.1521510168.A.45F.html" target="_blank" rel="noopener noreffer">https://www.ptt.cc/bbs/MobileComm/M.1521510168.A.45F.html</a></li>
<li><a href="http://www.rayzen-dev.com/root-htc-ultra/" target="_blank" rel="noopener noreffer">http://www.rayzen-dev.com/root-htc-ultra/</a></li>
</ol>
</li>
</ol>
<h2 id="magisk-安裝">Magisk 安裝</h2>
<p>參考: <a href="https://izaka.tw/android-magisk-installation-guide/" target="_blank" rel="noopener noreffer">https://izaka.tw/android-magisk-installation-guide/</a></p>
<ol>
<li>用手機從這裡下載 Magisk-v20.3.zip <a href="https://forum.xda-developers.com/apps/magisk/official-magisk-v7-universal-systemless-t3473445" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/apps/magisk/official-magisk-v7-universal-systemless-t3473445</a></li>
<li>重開進入 TWRP (指令: adb wait-for-device reboot recovery)</li>
<li>選擇 INSTALL, 路徑選擇 /sdcard/Download</li>
<li>選擇檔案後, 執行螢幕最下面的 Swipe to confirm Flash</li>
<li>重開系統</li>
</ol>
<h3 id="magisk-module">Magisk Module</h3>
<ul>
<li>YouTube Vanced</li>
</ul>
<ol>
<li>如果有更新過 YouTube, 需要進 Google Play 把更新移除, 這樣才會看到 YouTube Vanced</li>
<li>要把 Google Play 的自動更新關閉</li>
</ol>
<h2 id="lineageos">LineageOS</h2>
<p>官網</p>
<ul>
<li>
<p>LineageOS 16: <a href="https://forum.xda-developers.com/u-ultra/development/rom-lineageos-16-0-t3856221" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/u-ultra/development/rom-lineageos-16-0-t3856221</a></p>
</li>
<li>
<p>LineageOS 17: <a href="https://forum.xda-developers.com/u-ultra/development/rom-lineageos-17-0-t3970921" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/u-ultra/development/rom-lineageos-17-0-t3970921</a></p>
</li>
</ul>
]]></description>
</item>
<item>
    <title>Asuswrt Merlin FreshJR Adaptive QoS (流量管理)</title>
    <link>https://dennys.github.io/202001/asuswrt-merlin-freshjr-adaptive-qos/</link>
    <pubDate>Mon, 27 Jan 2020 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/202001/asuswrt-merlin-freshjr-adaptive-qos/</guid>
    <description><![CDATA[<h2 id="freshjr-adaptive-qos">FreshJR Adaptive QOS</h2>
<p><a href="https://www.snbforums.com/threads/36836/" target="_blank" rel="noopener noreffer">FreshJR Adaptive QoS</a> 是個可安裝在 Asus Merlin 上的流量管理軟體</p>
<h2 id="安裝步驟">安裝步驟</h2>
<ol>
<li>
<p>用 <a href="https://diversion.ch/amtm.html" target="_blank" rel="noopener noreffer">amtm</a> (Asuswrt-Merlin 384.15 以上已內建) 安裝就就好, 手動安裝可參考下列說明</p>
<ul>
<li>原文: <a href="https://www.snbforums.com/threads/36836/" target="_blank" rel="noopener noreffer">https://www.snbforums.com/threads/36836/</a></li>
<li>中文摘要翻譯: <a href="https://www.ptt.cc/bbs/Broad" target="_blank" rel="noopener noreffer">https://www.ptt.cc/bbs/Broad</a>_Band/M.1546556091.A.F79.html</li>
</ul>
</li>
<li>
<p>如何確定安裝成功</p>
<ol>
<li>執行 <code>/jffs/script/FreshJR\_QOS -debug</code></li>
<li>Undf FlowID 的值如果不是 17, 那就安裝成功了
</li>
</ol>
</li>
</ol>
<h2 id="安裝前">安裝前</h2>
<p>設定如下:</p>
<p></p>
<p>測試結果: <a href="http://www.dslreports.com/speedtest/58928634" target="_blank" rel="noopener noreffer">http://www.dslreports.com/speedtest/58928634</a></p>
<p></p>
<p></p>
<h2 id="安裝後">安裝後</h2>
<p>設定如下:</p>
<p></p>
<p>測試結果: <a href="http://www.dslreports.com/speedtest/58929066" target="_blank" rel="noopener noreffer">http://www.dslreports.com/speedtest/58929066</a></p>
<p></p>
<p></p>
]]></description>
</item>
<item>
    <title>Asuswrt Merlin Diversion (分享器擋廣告)</title>
    <link>https://dennys.github.io/202001/asuswrt-merlin-diversion/</link>
    <pubDate>Fri, 24 Jan 2020 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/202001/asuswrt-merlin-diversion/</guid>
    <description><![CDATA[<h2 id="asuswrt-merlin">Asuswrt-Merlin</h2>
<p><a href="https://www.asuswrt-merlin.net/" target="_blank" rel="noopener noreffer">Asuswrt-Merlin</a> 是個 Asus router 的 3rd party fireware, 提供了不少增強的功能, 也有很多 plugin 可以使用. 刷機的方法可參考官方文件: <a href="https://github.com/RMerl/asuswrt-merlin.ng/wiki/Installation" target="_blank" rel="noopener noreffer">https://github.com/RMerl/asuswrt-merlin.ng/wiki/Installation</a> (不過寫的滿簡單的, 建議 google 一下其他人寫的介紹)</p>
<h2 id="diversion">Diversion</h2>
<p><a href="https://diversion.ch/" target="_blank" rel="noopener noreffer">Diversion</a> 是個可安裝在 Asuswrt Merlin 上的 AD block 軟體, 他的原理是直接在 Hub 上面裝一個 DNS server, 然後當你的 client 要查某一個 domain 的時候, 他如果發現這個 domain 在他的黑名單裡面, 就把他擋掉.</p>
<h2 id="安裝步驟">安裝步驟</h2>
<p>然後他為了要檔 https, 有安裝 pixelserv-tls, 可參考這個 <a href="https://diversion.ch/faq-reader/what-does-pixelserv-tls-do.html" target="_blank" rel="noopener noreffer">FAQ</a> 看一下這是甚麼東西他能做的事情</p>
<h3 id="asuswrt-merlin-web-gui-設定">Asuswrt Merlin Web GUI 設定</h3>
<p>Asuswrt Merlin 的 Web GUI 只要把 JFFS 打開就好, 其他都得使用 command line.</p>
<p></p>
<h3 id="diversion-安裝">Diversion 安裝</h3>
<ol>
<li>
<p>在上面的 JFFS 安裝好後, JFFS 一開始會掛在 /dev/sda1, 而且格式是 NTFS (可用 fdisk 看)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">admin@RT-AC66U\_B1-B898:/tmp/home/root# df
</span></span><span class="line"><span class="cl">Filesystem           1K-blocks      Used Available Use% Mounted on
</span></span><span class="line"><span class="cl">/dev/root                33408     33408         0 100% /
</span></span><span class="line"><span class="cl">devtmpfs                127732         0    127732   0% /dev
</span></span><span class="line"><span class="cl">tmpfs                   127836      1532    126304   1% /tmp
</span></span><span class="line"><span class="cl">/dev/mtdblock4           64256      2868     61388   4% /jffs
</span></span><span class="line"><span class="cl">/dev/sda1             60058960     11712  60047248   0% /tmp/mnt/sda1
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>安裝 <a href="https://diversion.ch/amtm.html" target="_blank" rel="noopener noreffer">amtm</a>, 指令如下 (Asuswrt-Merlin 384.15 已內建 amtm, 不須另外安裝):</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -Os https://diversion.ch/amtm/amtm sh amtm
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>把 USB 格式化成 ext, 步驟如下</p>
<ol>
<li>執行 <code>/jffs/scripts/amtm</code></li>
<li>執行 <code>fd</code></li>
<li>然後照著說明格式化, 格式化完後會重開機</li>
<li>完成後 df 如下</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">admin@RT-AC66U\_B1-B898:/tmp/home/root# df
</span></span><span class="line"><span class="cl">Filesystem           1K-blocks      Used Available Use% Mounted on
</span></span><span class="line"><span class="cl">/dev/root                33408     33408         0 100% /
</span></span><span class="line"><span class="cl">devtmpfs                127732         0    127732   0% /dev
</span></span><span class="line"><span class="cl">tmpfs                   127836      1528    126308   1% /tmp
</span></span><span class="line"><span class="cl">/dev/mtdblock4           64256      2860     61396   4% /jffs
</span></span><span class="line"><span class="cl">/dev/sda1             59144340    184232  55955696   0% /tmp/mnt/usb
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>一樣在 amtm 裡面執行 dc, 進行 disk check, 結果如下</p>
<p></p>
</li>
<li>
<p>安裝 Diversion, 在 amtm 裡面執行 &lsquo;1&rsquo; (可先用 &lsquo;i&rsquo; 指令確認一下是用 1 來安裝 Diversion). 注意, 這裡本來應該先安裝 Entware, 但如果你嘗試安裝, amtm 會建議你直接裝 Diversion, 然後他在安裝過程中會自動安裝 Entware</p>
<p></p>
</li>
<li>
<p>Diversion 安裝結果如下, 注意, 他移除了 LAN 的 DNS 8.8.8.8/8.8.4.4. 不過他沒有動到 WAN 的 DNS.</p>
<p></p>
</li>
<li>
<p>安裝 Diversion Standard</p>
<p></p>
</li>
<li>
<p>這邊注意, 要回到 Asuswrt-Merlin Web 設定</p>
<p></p>
</li>
<li>
<p>上面是寫要跳過 192.168.1.2, 但因為 pixelserv-tls 也需要 IP, 所以 192.168.1.3 也要跳過. 我後來是把 192.168.1.1~10 當成特殊用途, 所以我把 DHCP 設成從 192.168.1.11 開始分配.</p>
<p></p>
</li>
<li>
<p>接下來要輸入 pixelserv-tls 的 IP, 這裡就避開 DHCP 網段就好
</p>
</li>
<li>
<p>選擇 log 方式, 如果你要把 log 寫下來, 就選 1</p>
</li>
</ol>
<p></p>
<ol start="12">
<li>他會安裝到這個目錄 /tmp/mnt/usb/entware</li>
</ol>
<h3 id="特別注意">特別注意</h3>
<p>因為 Diversion 是使用 DNS 來 block AD, 因此 WAN 的地方可以指定 DNS</p>
<p></p>
<p>但 LAN 的地方必須清空, client 的 DNS 必須是 192.168.1.1. 因為所有連到這台 router 的電腦或手機, 他們的 DNS server 都必須是 192.168.1.1, 這樣 Diversion 才會有作用.</p>
<p></p>
<p>在 Windows 可用 ipconfig /all 檢查 DNS 是否有設定正確</p>
<p></p>
<h2 id="diversion-使用">Diversion 使用</h2>
<ol>
<li>使用 putty 連進去後, 執行 diversion, 看到如下畫面就是安裝成功了</li>
</ol>
<p></p>
<ol start="2">
<li>選擇 f (follow dnsmasq.log) 可以看 log, 有以下幾種模式可以選 (實際 log 在 <code>/tmp/mnt/sda1/entware/var/log/dnsmasq.log</code>, 紅色的部分要看一開始設定的名字)</li>
</ol>
<p></p>
<ol start="3">
<li>選擇 1, 可看到如下就是有成功了</li>
</ol>
<p></p>
<ol start="4">
<li>瀏覽器會看到如下</li>
</ol>
<p></p>
<h2 id="ios-shortcut-安裝使用">iOS Shortcut 安裝/使用</h2>
<ol>
<li>要先打開安全性: 設定 -&gt; 捷徑 -&gt; 允許不受信任的捷徑</li>
<li>打開 https://diversion.ch/ios-shortcut.html, 選擇最新的版本</li>
</ol>
<h2 id="參考">參考</h2>
<ol>
<li><a href="https://www.snbforums.com/threads/amtm-step-by-step-install-guide-l-ld.56237/" target="_blank" rel="noopener noreffer">https://www.snbforums.com/threads/amtm-step-by-step-install-guide-l-ld.56237/</a></li>
</ol>
]]></description>
</item>
</channel>
</rss>
