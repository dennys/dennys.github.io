<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>改機 - Tag - Dennys Diary</title>
        <link>https://dennys.github.io/tags/%E6%94%B9%E6%A9%9F/</link>
        <description>改機 - Tag - Dennys Diary</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 16 Mar 2022 18:00:00 &#43;0800</lastBuildDate><atom:link href="https://dennys.github.io/tags/%E6%94%B9%E6%A9%9F/" rel="self" type="application/rss+xml" /><item>
    <title>Samsung Galaxy S7 Edge 刷 LineageOS</title>
    <link>https://dennys.github.io/2022/03/samsung-galaxy-s7-edge-lineageos.html</link>
    <pubDate>Wed, 16 Mar 2022 18:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/2022/03/samsung-galaxy-s7-edge-lineageos.html</guid>
    <description><![CDATA[<p> <strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!</strong></p>
<p><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!</strong></p>
<p><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!</strong></p>
<p>====================================================================</p>
<p>Samsung Galaxy S7 Edge 是 2016 年初的手機, 最多可更新到 Android 8, 最後的 patch 是 2020 年 9 月.</p>
<p>可以刷的 ROM 看來有很多 (可參考 <a href="https://forum.xda-developers.com/f/5186/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/f/5186/</a>)</p>
<ul>
<li>最有名的 LineageOS 15~19 (Android 8~12)</li>
<li>FloydQ: 這是基於 Android 10 的 Samsung OneUI 2.5, 這應該是可以用到比較多 Samsung 手機特有的功能</li>
</ul>
<h2 id="請先在電腦安裝以下兩個程式">請先在電腦安裝以下兩個程式</h2>
<ul>
<li>Samsung USB driver: <a href="http://developer.samsung.com/galaxy/others/android-usb-driver-for-windows" target="_blank" rel="noopener noreffer">http://developer.samsung.com/galaxy/others/android-usb-driver-for-windows</a></li>
<li>ODIN: <a href="https://odindownloader.com/" target="_blank" rel="noopener noreffer">https://odindownloader.com/</a></li>
</ul>
<h2 id="下載-lineageos-和-open-gapps">下載 LineageOS 和 Open GApps</h2>
<ul>
<li>LineageOS 19: <a href="https://forum.xda-developers.com/t/4369001/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/t/4369001/</a></li>
<li>LineageOS 18: <a href="https://forum.xda-developers.com/t/4172727/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/t/4172727/</a></li>
<li>Open Gapps: <a href="https://sourceforge.net/projects/opengapps/files/arm64/" target="_blank" rel="noopener noreffer">https://sourceforge.net/projects/opengapps/files/arm64/</a> =&gt; 注意, 這有綁 OS 版本, 在 2022/2/15 的版本還沒有支援 Android 12.</li>
</ul>
<h2 id="下載-twrp">下載 TWRP</h2>
<ul>
<li><a href="https://dl.twrp.me/hero2lte/twrp-3.6.0" target="_blank" rel="noopener noreffer">https://dl.twrp.me/hero2lte/twrp-3.6.0</a>_9-0-hero2lte.img.tar.html, 注意, 一開始使用 3.1.1 版, 結果都讀不到 SD card, 升到最新版後就好了.</li>
</ul>
<h2 id="安裝-twrp">安裝 TWRP</h2>
<ol>
<li>開啟工程模式<br>
1.1 設定→關於裝置→軟體資訊→版本號碼處連點8下<br>
1.2 進入開發人員選項後，USB偵錯以及OEM解鎖選項要打勾。</li>
<li>重開機進入 download mode<br>
3. 執行 ODIN, 把剛才的 twrp 給刷進去, 再重開就可以了</li>
</ol>
<h2 id="刷-lineageos-和-open-gapps">刷 LineageOS 和 Open Gapps</h2>
<p>執行 adb reboot recovery 或是先關機, 然後按音量上+Home+Power 鍵進入 TWRP Recovery. 選 INSTALL, 把LineageOS 和 Open Gapps 的 zip 檔案裝上去, 重開機就可以了.</p>
<p>如果要用 ADB, 指令如下:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb sideload open_gapps-arm64-11.0-nano-20220202.zip
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="twrp-被-lineageos-recovery-蓋掉的問題">TWRP 被 LineageOS Recovery 蓋掉的問題</h2>
<p>自 LineageOS 17 開始, 他自己有帶一個 Recovery, 嘗試刷回 TWRP 又常常失敗.</p>
<p>可試試看 <a href="https://forum.xda-developers.com/t/3334084/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/t/3334084/</a> 的 step 6~8</p>
<p>=================================================</p>
<h2 id="nikgapps-測試-失敗">NikGapps 測試 (失敗)</h2>
<p>一開始用 LineageOS 自己的 Recovery, 刷 NikGapps 一直失敗</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb sideload NikGapps-basic-arm64-12-20211224-signed.zip  
</span></span><span class="line"><span class="cl">adb: sideload connection failed: closed  
</span></span><span class="line"><span class="cl">adb: trying pre-KitKat sideload method…  
</span></span><span class="line"><span class="cl">adb: pre-KitKat sideload connection failed: closed
</span></span></code></pre></td></tr></table>
</div>
</div><p>用以下指令可解決</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">C:\platform-tools&gt;fastboot devices  
</span></span><span class="line"><span class="cl">C:\platform-tools&gt;adb usb  
</span></span><span class="line"><span class="cl">C:\platform-tools&gt;adb sideload NikGapps-basic-arm64-12-20211224-signed.zip  
</span></span><span class="line"><span class="cl">serving: &#39;NikGapps-basic-arm64-12-20211224-signed.zip&#39; (~32%)
</span></span></code></pre></td></tr></table>
</div>
</div><p>但最後又一直卡在空間不足, 就放棄了.</p>
]]></description>
</item>
<item>
    <title>如何將不要驗證 (Do Not Validate) 加回 Android 11 以上的 EAP Wi-Fi</title>
    <link>https://dennys.github.io/2022/03/do-not-validate-android-11-eap-wi-fi.html</link>
    <pubDate>Wed, 16 Mar 2022 18:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/2022/03/do-not-validate-android-11-eap-wi-fi.html</guid>
    <description><![CDATA[<p> <strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></p>
<p><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></p>
<p><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></p>
<p>===================================================================</p>
<p>Android 10 以前, 如果是連到 Enterprise Wi-Fi (EAP/PEAP), CA 憑證是可以選 不要驗證, 如下:</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-13.png" target="_blank" rel="noopener noreffer"></a></p>
<p>自 Android 11 起, 如果是連到 Enterprise Wi-Fi (PEAP), CA 憑證就無法選 不要驗證, 原因可參考 <a href="https://www.xda-developers.com/android-11-break-enterprise-wifi-connection/" target="_blank" rel="noopener noreffer">https://www.xda-developers.com/android-11-break-enterprise-wifi-connection/</a>. 這個方向應該是對的, 但如果網管不改, 一般使用者恐怕也無能為力. (而且 iPhone 竟然沒有卡這個&hellip;)</p>
<p>爬了一下文, 看來是可以直接把這個設定加回去 (參考: <a href="https://android.stackexchange.com/questions/231859/%29" target="_blank" rel="noopener noreffer">https://android.stackexchange.com/questions/231859/)</a>, 但很不幸的, 檔案是放在 /data/misc/apexdata/com.android.wifi/WifiConfigStore.xm, 這裡的檔案必須 Unlock 才能修改. 文章裡面是寫有可能透過 App 修改, 但我沒找到方法, 如果有人找到好方法了, 也麻煩分享一下.</p>
<p>步驟如下</p>
<p>1. 首先, 要 Unlock, Pixel 5 (Android 12) 可參考 <a href="https://wordpress.com/post/dennys.wordpress.com/280" target="_blank" rel="noopener noreffer">https://wordpress.com/post/dennys.wordpress.com/280</a>. (做到 Unlock 解鎖就可以了, 不需要 Root)</p>
<p>2. 試著連上 Wi-Fi, 網域就隨便給他寫, 然後試著連線, 這當然是不會成功, 目的只是要先寫入一版 Config 檔案, 等一下可以修改.</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/1-1.png" target="_blank" rel="noopener noreffer"></a></p>
<p>3. 先用下列指令檢查 WifiConfigStore.xml 是否正確, 這裡也可以用 adb pull 拉到電腦檢查, 但我一直沒成功, 就先用 cat 看</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb shell  
</span></span><span class="line"><span class="cl">su  
</span></span><span class="line"><span class="cl">cat /data/misc/apexdata/com.android.wifi/WifiConfigStore.xml
</span></span></code></pre></td></tr></table>
</div>
</div><p>WifiConfigStore.xml 內容如下, 可找 WifiEnterpriseConfiguration 這個關鍵字, 目的是要把紅色的設定值拿掉</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;WifiEnterpriseConfiguration&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Identity&#34;&gt;這裡是帳號名字&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;AnonIdentity&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Password&#34;&gt;這裡是密碼&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;ClientCert&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;CaCert&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;SubjectMatch&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Engine&#34;&gt;0&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;EngineId&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;PrivateKeyId&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;AltSubjectMatch&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;DomSuffixMatch&#34;&gt;這裡是上面隨便輸入的網域&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;CaPath&#34;&gt;/system/etc/security/cacerts&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;int name=&#34;EapMethod&#34; value=&#34;0&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;int name=&#34;Phase2Method&#34; value=&#34;4&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;PLMN&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Realm&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;int name=&#34;Ocsp&#34; value=&#34;0&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;WapiCertSuite&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;boolean name=&#34;AppInstalledRootCaCert&#34; value=&#34;false&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;boolean name=&#34;AppInstalledPrivateKey&#34; value=&#34;false&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;null name=&#34;KeyChainAlias&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;null name=&#34;DecoratedIdentityPrefix&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;/WifiEnterpriseConfiguration&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>4. 執行以下指令 (這指令是直接從上面那篇 stackexchange 抄過來的), 他就會把 CaPath 和 DomSuffixMatch 的內容改成空白. 最後一個步驟會重開, 要重開才會生效.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb shell  
</span></span><span class="line"><span class="cl">su  
</span></span><span class="line"><span class="cl">sed -i &#39;s%&lt;string name=&#34;CaPath&#34;&gt;.*&lt;/string&gt;%&lt;string name=&#34;CaPath&#34;&gt;&lt;/string&gt;%&#39; /data/misc/apexdata/com.android.wifi/WifiConfigStore.xml  
</span></span><span class="line"><span class="cl">sed -i &#39;s%&lt;string name=&#34;DomSuffixMatch&#34;&gt;.*&lt;/string&gt;%&lt;string name=&#34;DomSuffixMatch&#34;&gt;&lt;/string&gt;%&#39; /data/misc/apexdata/com.android.wifi/WifiConfigStore.xml  
</span></span><span class="line"><span class="cl">reboot
</span></span></code></pre></td></tr></table>
</div>
</div><p>5. 重開完後, 檢查 /data/misc/apexdata/com.android.wifi/WifiConfigStore.xml 的內容, 確認下面紅色這段的設定被清空了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;WifiEnterpriseConfiguration&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Identity&#34;&gt;這裡是帳號名字&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;AnonIdentity&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Password&#34;&gt;這裡是密碼&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;ClientCert&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;CaCert&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;SubjectMatch&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Engine&#34;&gt;0&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;EngineId&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;PrivateKeyId&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;AltSubjectMatch&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;DomSuffixMatch&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;CaPath&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;int name=&#34;EapMethod&#34; value=&#34;0&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;int name=&#34;Phase2Method&#34; value=&#34;4&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;PLMN&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Realm&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;int name=&#34;Ocsp&#34; value=&#34;0&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;WapiCertSuite&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;boolean name=&#34;AppInstalledRootCaCert&#34; value=&#34;false&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;boolean name=&#34;AppInstalledPrivateKey&#34; value=&#34;false&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;null name=&#34;KeyChainAlias&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;null name=&#34;DecoratedIdentityPrefix&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;/WifiEnterpriseConfiguration&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>6. 這時候應該就可以連線了</p>
<p>7. 因為實際上並不需要 root, 只是為了修改 WifiConfigStore.xml, 因此改完後可以 UnRoot (移除 Magisk 和刷回原廠 boot.img), 但因為解鎖會清空資料, 而且下次又遇到新的 Wi-Fi 又得重來, 我就維持解鎖狀態了. 方法可參考 <a href="https://dennys.wordpress.com/?p=330" target="_blank" rel="noopener noreffer">https://dennys.wordpress.com/?p=330</a></p>
<h2 id="後記">後記</h2>
<p>1. 這個方法並不是把不要驗證 (Do Not Validate) 的設定加回去, 而是先嘗試連線一個要驗證的 Wi-Fi (當然這裡會失敗), 等他把設定檔存下來之後, 再進系統把它改掉, 所以還是和 Android 10 以前不太一樣. 所以每次連上一個新的要使用 EAP 的 Wi-Fi 基地台都要重新執行一次, 會比較麻煩.</p>
]]></description>
</item>
<item>
    <title>HTC U Ultra 刷機</title>
    <link>https://dennys.github.io/2020/01/htc-u-ultra.html</link>
    <pubDate>Thu, 30 Jan 2020 08:04:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/2020/01/htc-u-ultra.html</guid>
    <description><![CDATA[<p>HTC U Ultra</p>
<p>HTC U Ultra 是 2017 年初的手機, 可更新到 Android 8 (security patch 到 2018/3/1)</p>
<p>Root</p>
<ol>
<li>
<p>htc 官方解鎖 <a href="http://www.rayzen-dev.com/htc-unlocked-download/" target="_blank" rel="noopener noreffer">http://www.rayzen-dev.com/htc-unlocked-download/</a></p>
</li>
<li>
<p>安裝 htc driver <a href="https://drive.google.com/open?id=1sgIbTgW9PKXb9PKQ_PSzJxHkwc5tMV6Z" target="_blank" rel="noopener noreffer">https://drive.google.com/open?id=1sgIbTgW9PKXb9PKQ_PSzJxHkwc5tMV6Z</a></p>
</li>
<li>
<p>TWRP</p>
</li>
<li>
<p>參考以下兩篇</p>
</li>
</ol>
<ul>
<li>
<p><a href="https://www.ptt.cc/bbs/MobileComm/M.1521510168.A.45F.html" target="_blank" rel="noopener noreffer">https://www.ptt.cc/bbs/MobileComm/M.1521510168.A.45F.html</a></p>
</li>
<li>
<p><a href="http://www.rayzen-dev.com/root-htc-ultra/" target="_blank" rel="noopener noreffer">http://www.rayzen-dev.com/root-htc-ultra/</a></p>
</li>
</ul>
<p>Magisk</p>
<p>參考: <a href="https://izaka.tw/android-magisk-installation-guide/" target="_blank" rel="noopener noreffer">https://izaka.tw/android-magisk-installation-guide/</a></p>
<ol>
<li>
<p>用手機從這裡下載 Magisk-v20.3.zip <a href="https://forum.xda-developers.com/apps/magisk/official-magisk-v7-universal-systemless-t3473445" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/apps/magisk/official-magisk-v7-universal-systemless-t3473445</a></p>
</li>
<li>
<p>重開進入 TWRP (指令: adb wait-for-device reboot recovery)</p>
</li>
<li>
<p>選擇 INSTALL, 路徑選擇 /sdcard/Download</p>
</li>
<li>
<p>選擇檔案後, 執行螢幕最下面的 Swipe to confirm Flash</p>
</li>
<li>
<p>重開系統</p>
</li>
</ol>
<p>Magisk Module</p>
<ul>
<li>YouTube Vanced</li>
</ul>
<ol>
<li>
<p>如果有更新過 YouTube, 需要進 Google Play 把更新移除, 這樣才會看到 YouTube Vanced</p>
</li>
<li>
<p>要把 Google Play 的自動更新關閉</p>
</li>
</ol>
<ul>
<li></li>
</ul>
<p>LineageOS</p>
<p>官網</p>
<ul>
<li>
<p>LineageOS 16: <a href="https://forum.xda-developers.com/u-ultra/development/rom-lineageos-16-0-t3856221" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/u-ultra/development/rom-lineageos-16-0-t3856221</a></p>
</li>
<li>
<p>LineageOS 17: <a href="https://forum.xda-developers.com/u-ultra/development/rom-lineageos-17-0-t3970921" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/u-ultra/development/rom-lineageos-17-0-t3970921</a></p>
</li>
</ul>
]]></description>
</item>
<item>
    <title>Asuswrt Merlin FreshJR Adaptive QoS (流量管理)</title>
    <link>https://dennys.github.io/2020/01/asuswrt-merlin-freshjr-adaptive-qos.html</link>
    <pubDate>Mon, 27 Jan 2020 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/2020/01/asuswrt-merlin-freshjr-adaptive-qos.html</guid>
    <description><![CDATA[<p>FreshJR Adaptive QOS</p>
<p>FreshJR Adaptive QoS 是個可安裝在 Asus Merlin 上的流量管理軟體</p>
<p>官網: <a href="https://www.snbforums.com/threads/36836/" target="_blank" rel="noopener noreffer">https://www.snbforums.com/threads/36836/</a></p>
<p>安裝</p>
<ol>
<li>用amtm安裝就就好, 手動安裝可參考下列說明</li>
</ol>
<ul>
<li>
<p>原文: <a href="https://www.snbforums.com/threads/36836/" target="_blank" rel="noopener noreffer">https://www.snbforums.com/threads/36836/</a></p>
</li>
<li>
<p>中文摘要翻譯: <a href="https://www.ptt.cc/bbs/Broad_Band/M.1546556091.A.F79.html" target="_blank" rel="noopener noreffer">https://www.ptt.cc/bbs/Broad_Band/M.1546556091.A.F79.html</a></p>
</li>
</ul>
<ol start="3">
<li>如何確定安裝成功</li>
</ol>
<ul>
<li>
<p>執行 /jffs/script/FreshJR_QOS -debug</p>
</li>
<li>
<p>Undf FlowID 的值如果不是 17, 那就安裝成功了</p>
</li>
</ul>
<p></p>
<p>安裝前</p>
<p>設定:</p>
<p></p>
<p>測試結果: <a href="http://www.dslreports.com/speedtest/58928634" target="_blank" rel="noopener noreffer">http://www.dslreports.com/speedtest/58928634</a></p>
<p></p>
<p></p>
<p>安裝後</p>
<p>設定:</p>
<p></p>
<p>測試結果: <a href="http://www.dslreports.com/speedtest/58929066" target="_blank" rel="noopener noreffer">http://www.dslreports.com/speedtest/58929066</a></p>
<p></p>
<p></p>
]]></description>
</item>
</channel>
</rss>
