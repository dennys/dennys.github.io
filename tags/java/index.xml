<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - Tag - Dennys Diary</title>
        <link>https://dennys.github.io/tags/java/</link>
        <description>Java - Tag - Dennys Diary</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 30 Sep 2011 22:40:00 &#43;0800</lastBuildDate><atom:link href="https://dennys.github.io/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>Maven 4 - Others</title>
    <link>https://dennys.github.io/201109/maven-4-others/</link>
    <pubDate>Fri, 30 Sep 2011 22:40:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/201109/maven-4-others/</guid>
    <description><![CDATA[<h2 id="package-source-code">Package source code</h2>
<p>在 multi module 的架構裡面, 因為都只有打包 .class 到 local repository 的 .jar 檔裡面. 因此在 Eclipse 裡面按 F3 是無法連結到 source code 的, 要使用 maven-source-plugin 把 source code 也打包到 local repository 才可以. 如果原始的檔名是 app-1.0.jar, 則 source 會被打包到 app-1.0-sources.jar goal 請使用 source:jar</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">  &lt;build&gt;
</span></span><span class="line"><span class="cl">    &lt;plugins&gt;
</span></span><span class="line"><span class="cl">      &lt;!-- Attach sources to repository --&gt;
</span></span><span class="line"><span class="cl">      &lt;plugin&gt;
</span></span><span class="line"><span class="cl">        &lt;artifactId&gt;maven-source-plugin&lt;/artifactId&gt;
</span></span><span class="line"><span class="cl">        &lt;executions&gt;
</span></span><span class="line"><span class="cl">          &lt;execution&gt;
</span></span><span class="line"><span class="cl">            &lt;id&gt;attach-sources&lt;/id&gt;
</span></span><span class="line"><span class="cl">            &lt;phase&gt;verify&lt;/phase&gt;
</span></span><span class="line"><span class="cl">            &lt;goals&gt;
</span></span><span class="line"><span class="cl">              &lt;goal&gt;jar&lt;/goal&gt;
</span></span><span class="line"><span class="cl">            &lt;/goals&gt;
</span></span><span class="line"><span class="cl">          &lt;/execution&gt;
</span></span><span class="line"><span class="cl">        &lt;/executions&gt;
</span></span><span class="line"><span class="cl">      &lt;/plugin&gt;
</span></span><span class="line"><span class="cl">    &lt;/plugins&gt;
</span></span><span class="line"><span class="cl">  &lt;/build&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="參考">參考</h2>
<ol>
<li><a href="http://maven.apache.org/plugins/maven-source-plugin/jar-mojo.html" target="_blank" rel="noopener noreffer">http://maven.apache.org/plugins/maven-source-plugin/jar-mojo.html</a></li>
</ol>
]]></description>
</item>
<item>
    <title>Maven 3 - 打包 EJB, EAR</title>
    <link>https://dennys.github.io/201109/maven-3-ejb-ear/</link>
    <pubDate>Thu, 29 Sep 2011 10:37:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/201109/maven-3-ejb-ear/</guid>
    <description><![CDATA[<h2 id="ear-的打包">Ear 的打包</h2>
<p>Ear 的打包分成兩階段, 第一個打包各個 ejb, 第二是把各個 ejb 加上 library 打包成 ear. 打包 ejb 的部分相對簡單, 如下. 最後會打包出 app-ejb1.jar (依據 finalName 的設定) 這個 ejb 檔案.</p>
<h3 id="ejb-client">EJB Client</h3>
<p>generateClient 是指定要產生一個 app-ejb1-client.jar 的檔案, 不過如果只加 generateClient 而沒有任何其他參數, 預設是只會過濾某幾個 pattern 而已, 請再加上 clientIncludes, clientExcludes 來過濾. 詳情可參考</p>
<ol>
<li><a href="http://maven.apache.org/plugins/maven-ejb-plugin/examples/generating-ejb-client.html" target="_blank" rel="noopener noreffer">http://maven.apache.org/plugins/maven-ejb-plugin/examples/generating-ejb-client.html</a></li>
<li><a href="http://maven.apache.org/plugins/maven-ejb-plugin/examples/ejb-client-dependency.html" target="_blank" rel="noopener noreffer">http://maven.apache.org/plugins/maven-ejb-plugin/examples/ejb-client-dependency.html</a></li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"> &lt;build&gt;
</span></span><span class="line"><span class="cl">    &lt;plugins&gt;
</span></span><span class="line"><span class="cl">      &lt;plugin&gt;
</span></span><span class="line"><span class="cl">        &lt;groupid&gt;org.apache.maven.plugins&lt;/groupid&gt;
</span></span><span class="line"><span class="cl">        &lt;artifactid&gt;maven-compiler-plugin&lt;/artifactid&gt;
</span></span><span class="line"><span class="cl">        &lt;version&gt;2.3.2&lt;/version&gt;
</span></span><span class="line"><span class="cl">        &lt;configuration&gt;
</span></span><span class="line"><span class="cl">          &lt;source&gt;&lt;/source&gt;1.6
</span></span><span class="line"><span class="cl">          &lt;target&gt;1.6&lt;/target&gt;
</span></span><span class="line"><span class="cl">        &lt;/configuration&gt;
</span></span><span class="line"><span class="cl">      &lt;/plugin&gt;
</span></span><span class="line"><span class="cl">      &lt;plugin&gt;
</span></span><span class="line"><span class="cl">        &lt;groupid&gt;org.apache.maven.plugins&lt;/groupid&gt;
</span></span><span class="line"><span class="cl">        &lt;artifactid&gt;maven-ejb-plugin&lt;/artifactid&gt;
</span></span><span class="line"><span class="cl">        &lt;version&gt;2.3&lt;/version&gt;
</span></span><span class="line"><span class="cl">        &lt;configuration&gt;
</span></span><span class="line"><span class="cl">          &lt;ejbversion&gt;2.1&lt;/ejbversion&gt;
</span></span><span class="line"><span class="cl">          
</span></span><span class="line"><span class="cl">          &lt;generateclient&gt;true&lt;/generateclient&gt;
</span></span><span class="line"><span class="cl">        &lt;/configuration&gt;
</span></span><span class="line"><span class="cl">      &lt;/plugin&gt;
</span></span><span class="line"><span class="cl">    &lt;/plugins&gt;
</span></span><span class="line"><span class="cl">    &lt;finalname&gt;app-ejb1&lt;/finalname&gt;
</span></span><span class="line"><span class="cl">  &lt;/build&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>打包 ear 檔的部分則要注意一下. 首先是要設定好 dependency 如下, 注意雖然上面打包的 ejb 其副檔名是 .jar, 但這裡的 type 必須設定成 ejb</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">  &lt;dependencies&gt;
</span></span><span class="line"><span class="cl">    &lt;dependency&gt;
</span></span><span class="line"><span class="cl">        &lt;groupid&gt;com.yourcompany&lt;/groupid&gt;
</span></span><span class="line"><span class="cl">        &lt;artifactid&gt;app-ejb1&lt;/artifactid&gt;
</span></span><span class="line"><span class="cl">        &lt;version&gt;1.0&lt;/version&gt;
</span></span><span class="line"><span class="cl">        &lt;type&gt;ejb&lt;/type&gt;
</span></span><span class="line"><span class="cl">    &lt;/dependency&gt;
</span></span><span class="line"><span class="cl">    &lt;dependency&gt;
</span></span><span class="line"><span class="cl">        &lt;groupid&gt;com.yourcompany&lt;/groupid&gt;
</span></span><span class="line"><span class="cl">        &lt;artifactid&gt;app-ejb2&lt;/artifactid&gt;
</span></span><span class="line"><span class="cl">        &lt;version&gt;1.0&lt;/version&gt;
</span></span><span class="line"><span class="cl">        &lt;type&gt;ejb&lt;/type&gt;
</span></span><span class="line"><span class="cl">    &lt;/dependency&gt;
</span></span><span class="line"><span class="cl">  &lt;/dependencies&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>打包 ear 的設定要注意幾個地方:`</p>
<ol>
<li>雖然 dependency 已經有指定了, 但是 ejb 還是要在 ejbModule 的地方再指定一次, 不同的是, 這裡不用指定 version 和 type, 不過要指定 bundleFileName, 這個是 ejb 最後會使用的檔案名字.</li>
<li>請記得設定 defaultLibBundleDir, 這樣會把用到的 library 放到 APP-INF/lib (預設是通通放在跟目錄, 和 ejb 混在一起, 那就沒用了)</li>
<li>如果有特別的檔案要直接放進來, 可以用 jarModule`</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">  &lt;build&gt;
</span></span><span class="line"><span class="cl">    &lt;finalname&gt;app-ear&lt;/finalname&gt;
</span></span><span class="line"><span class="cl">    &lt;plugins&gt;
</span></span><span class="line"><span class="cl">      &lt;plugin&gt;
</span></span><span class="line"><span class="cl">        &lt;groupid&gt;org.apache.maven.plugins&lt;/groupid&gt;
</span></span><span class="line"><span class="cl">        &lt;artifactid&gt;maven-ear-plugin&lt;/artifactid&gt;
</span></span><span class="line"><span class="cl">        &lt;version&gt;2.5&lt;/version&gt;
</span></span><span class="line"><span class="cl">        &lt;configuration&gt;
</span></span><span class="line"><span class="cl">          &lt;generateapplicationxml&gt;true&lt;/generateapplicationxml&gt;  
</span></span><span class="line"><span class="cl">          &lt;defaultlibbundledir&gt;APP-INF/lib&lt;/defaultlibbundledir&gt;
</span></span><span class="line"><span class="cl">          &lt;modules&gt; 
</span></span><span class="line"><span class="cl">            &lt;ejbmodule&gt; 
</span></span><span class="line"><span class="cl">              &lt;groupid&gt;com.yourcompany&lt;/groupid&gt; 
</span></span><span class="line"><span class="cl">              &lt;artifactid&gt;app-ejb1&lt;/artifactid&gt; 
</span></span><span class="line"><span class="cl">              &lt;bundlefilename&gt;app-ejb1.jar&lt;/bundlefilename&gt; 
</span></span><span class="line"><span class="cl">            &lt;/ejbmodule&gt;
</span></span><span class="line"><span class="cl">            &lt;ejbmodule&gt; 
</span></span><span class="line"><span class="cl">              &lt;groupid&gt;com.yourcompany&lt;/groupid&gt; 
</span></span><span class="line"><span class="cl">              &lt;artifactid&gt;app-ejb2&lt;/artifactid&gt; 
</span></span><span class="line"><span class="cl">              &lt;bundlefilename&gt;app-ejb2.jar&lt;/bundlefilename&gt; 
</span></span><span class="line"><span class="cl">            &lt;/ejbmodule&gt;
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">          &lt;/modules&gt; 
</span></span><span class="line"><span class="cl">        &lt;/configuration&gt;
</span></span><span class="line"><span class="cl">      &lt;/plugin&gt;
</span></span><span class="line"><span class="cl">    &lt;/plugins&gt;
</span></span><span class="line"><span class="cl">  &lt;/build&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="最後-app-ear-的結構如下">最後 app-ear 的結構如下</h3>
<p>├── app-ejb1.jar<br>
├── app-ejb2.jar<br>
└── WEB-INF<br>
└── lib<br>
├── log4j-xxxx.jar<br>
├── axis-xxxxjar<br>
└── jdbc-xxxx.jar</p>
<p>如果要把 war 也放進來, 使用 webModule 即可, 如下. 要注意的是, 原來的 war 裡面的 contextRoot 會失去作用, 如果要指定, 請在 webModule 裡面新增一個</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">  &lt;modules&gt;
</span></span><span class="line"><span class="cl">    &lt;webmodule&gt;
</span></span><span class="line"><span class="cl">      &lt;groupid&gt;artifactGroupId&lt;/groupid&gt;
</span></span><span class="line"><span class="cl">      &lt;artifactid&gt;artifactId&lt;/artifactid&gt;
</span></span><span class="line"><span class="cl">      &lt;contextroot&gt;/custom-context-root&lt;/contextroot&gt;
</span></span><span class="line"><span class="cl">    &lt;/webmodule&gt;
</span></span><span class="line"><span class="cl">  &lt;/modules&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>目前的 ear 並沒有把 war 打包進去, 如果要打包也很簡單, 在 ear 的 pom 加上一段 warModule 就可以了. 基本上沒有什麼問題, 可以改進的地方只有, 如果 ear 和 war 有共用的 .jar 檔, 那就會重複打包. 可參考 <a href="http://www.blogger.com/%5C%22http://maven.apache.org/plugins/maven-war-plugin/examples/skinny-wars.html%5C%22" target="_blank" rel="noopener noreffer">Creating Skinny WARs</a></p>
<h2 id="注意">注意</h2>
<ol>
<li>如果有使用 JPA, 而這個 JPA 是放在 EJB 或某個共用的 jar, 納在包成 EAR 的時候就要注意, 如果這個 jar 會同時出現在 war 的 WEB-INF/lib 以及 ear 的 APP-INF/lib, 那就會出現 duplicate persistence units with name 的錯誤. 解法:</li>
<li>ejb 會重複出現, 解法:無, 但似乎沒什麼影響</li>
</ol>
<h2 id="參考">參考</h2>
<ol>
<li><a href="http://maven.apache.org/plugins/maven-ejb-plugin/" target="_blank" rel="noopener noreffer">http://maven.apache.org/plugins/maven-ejb-plugin/</a></li>
<li><a href="http://maven.apache.org/plugins/maven-ear-plugin/" target="_blank" rel="noopener noreffer">http://maven.apache.org/plugins/maven-ear-plugin/</a></li>
</ol>
]]></description>
</item>
<item>
    <title>Maven 2 - 打包 war (含 applet)</title>
    <link>https://dennys.github.io/201109/maven-2-war-applet/</link>
    <pubDate>Wed, 28 Sep 2011 22:37:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/201109/maven-2-war-applet/</guid>
    <description><![CDATA[<p>在 Maven 裡面打包 war 應該是最簡單的了, 照著 Maven 的<a href="http://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html/" target="_blank" rel="noopener noreffer">目錄結構</a>放好, 他就會自動去幫你把程式打包好. 唯一的問題是, 如果有用到 applet, 那就得另外處理了. 一個簡單的方法, 把 applet 設定成 war 的 dependency, 那就會把 applet 放到 WEB-INF/lib 下面, 不過這樣子似乎無法呼叫到 (這部分如果有解麻煩指正).</p>
<p>另外的方法是用 Maven 的 maven-dependency-plugin, 做法如下:</p>
<ol>
<li>先把 applet 打包好, 並且記得在使用 Maven 時加上 install 這個 goal, 這樣就會把打包好的 applet 放到 local repository 裡面去.</li>
<li>使用 maven-dependency-plugin 的 copy, 將 applet 放到指定的目錄. 這裡因為要放到 root, 所以指定的是 ${project.build.directory}/app-war-1.0. 後面的 &ldquo;app-war-1.0&rdquo; 請依照實際的專案修改.</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">  &lt;build&gt;
</span></span><span class="line"><span class="cl">    &lt;plugins&gt;
</span></span><span class="line"><span class="cl">      &lt;plugin&gt;
</span></span><span class="line"><span class="cl">        &lt;artifactid&gt;maven-dependency-plugin&lt;/artifactid&gt;
</span></span><span class="line"><span class="cl">        &lt;version&gt;2.2&lt;/version&gt;
</span></span><span class="line"><span class="cl">        &lt;executions&gt;
</span></span><span class="line"><span class="cl">          &lt;execution&gt;
</span></span><span class="line"><span class="cl">            &lt;id&gt;copy&lt;/id&gt;
</span></span><span class="line"><span class="cl">            &lt;phase&gt;prepare-package&lt;/phase&gt;
</span></span><span class="line"><span class="cl">            &lt;goals&gt;
</span></span><span class="line"><span class="cl">              &lt;goal&gt;copy&lt;/goal&gt;
</span></span><span class="line"><span class="cl">            &lt;/goals&gt;
</span></span><span class="line"><span class="cl">            &lt;configuration&gt;
</span></span><span class="line"><span class="cl">              &lt;artifactitems&gt;
</span></span><span class="line"><span class="cl">                &lt;artifactitem&gt;
</span></span><span class="line"><span class="cl">                  &lt;groupid&gt;com.yourcompany&lt;/groupid&gt;
</span></span><span class="line"><span class="cl">                  &lt;artifactid&gt;app-client&lt;/artifactid&gt;
</span></span><span class="line"><span class="cl">                  &lt;version&gt;1.0&lt;/version&gt;
</span></span><span class="line"><span class="cl">                  &lt;type&gt;jar&lt;/type&gt;
</span></span><span class="line"><span class="cl">                  &lt;overwrite&gt;true&lt;/overwrite&gt;
</span></span><span class="line"><span class="cl">                  &lt;destfilename&gt;app-client.jar&lt;/destfilename&gt;
</span></span><span class="line"><span class="cl">                &lt;/artifactitem&gt;
</span></span><span class="line"><span class="cl">              &lt;/artifactitems&gt;
</span></span><span class="line"><span class="cl">              &lt;outputdirectory&gt;${project.build.directory}/app-war-1.0&lt;/outputdirectory&gt;
</span></span><span class="line"><span class="cl">            &lt;/configuration&gt;
</span></span><span class="line"><span class="cl">          &lt;/execution&gt;
</span></span><span class="line"><span class="cl">        &lt;/executions&gt;
</span></span><span class="line"><span class="cl">      &lt;/plugin&gt;
</span></span><span class="line"><span class="cl">    &lt;/plugins&gt;
</span></span><span class="line"><span class="cl">  &lt;/build&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="reference">Reference</h2>
<p><a href="http://maven.apache.org/plugins/maven-dependency-plugin/" target="_blank" rel="noopener noreffer">http://maven.apache.org/plugins/maven-dependency-plugin/</a></p>
]]></description>
</item>
<item>
    <title>Maven 1 - 打包 Jar, Applet 並簽名 Sign</title>
    <link>https://dennys.github.io/201109/maven-1-jar-applet-sign/</link>
    <pubDate>Tue, 27 Sep 2011 20:49:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/201109/maven-1-jar-applet-sign/</guid>
    <description><![CDATA[<p>Maven 1 - 打包 Jar, Applet 並簽名 Sign&rsquo;,&lsquo;Applet 程式在 package 時有兩個重點, 一是要把所有用到的 jar 程式庫都包在一起, 因為 applet 不像 ear 或 war 有固定目錄可以放 *.jar. 二是如果需要用到 browser 機器的一些資源 (如印表機), 則必須經過簽名.</p>
<p>以下是要把 Applet 程式打包的寫法, 幾個重點:</p>
<ul>
<li>descriptorRef 使用 jar-with-dependencies: 會把用到的 class 都一起打包進最後的 jar 檔. 預設會打包到另一個檔案, 原來的名字如果是 app-client-1.0.jar, 則會打包成 app-client-1.0-jar-with-dependencies.jar</li>
<li>appendAssemblyId 設成 false, 這樣產生出來的 jar 檔案名稱才不會有 <em><strong>-with-dependencies</strong></em> 的字</li>
<li>phase 請指定 package, 這樣才會把需要的 class 都打包進去</li>
<li>goal 請使用 assembly:single (不指定也可以, 有 package 也會執行到這裡)</li>
<li>注意, maven-assembly-plugin 一定要用 2.2-beta-5, 用 2.2 或 2.2.1 都會有問題 (這感覺不太合理, 不過測試結果目前就是這樣, 或許是我哪裡弄錯了)</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;pre class=&#34;brush: xml&#34; title=&#34;Client 的 pom.xml (打包用)&#34;&gt;
</span></span><span class="line"><span class="cl">  &lt;build&gt;
</span></span><span class="line"><span class="cl">    &lt;plugins&gt;
</span></span><span class="line"><span class="cl">      &lt;plugin&gt;
</span></span><span class="line"><span class="cl">        &lt;groupid&gt;org.apache.maven.plugins&lt;/groupid&gt;
</span></span><span class="line"><span class="cl">        &lt;artifactid&gt;maven-compiler-plugin&lt;/artifactid&gt;
</span></span><span class="line"><span class="cl">        &lt;version&gt;2.3.2&lt;/version&gt;
</span></span><span class="line"><span class="cl">        &lt;configuration&gt;
</span></span><span class="line"><span class="cl">          &lt;source&gt;&lt;/source&gt;1.6
</span></span><span class="line"><span class="cl">          &lt;target&gt;1.6&lt;/target&gt;
</span></span><span class="line"><span class="cl">        &lt;/configuration&gt;
</span></span><span class="line"><span class="cl">      &lt;/plugin&gt;
</span></span><span class="line"><span class="cl">      &lt;plugin&gt;
</span></span><span class="line"><span class="cl">        &lt;artifactid&gt;maven-assembly-plugin&lt;/artifactid&gt;
</span></span><span class="line"><span class="cl">        &lt;version&gt;2.2-beta-5&lt;/version&gt;
</span></span><span class="line"><span class="cl">        &lt;configuration&gt;
</span></span><span class="line"><span class="cl">          &lt;descriptorrefs&gt;
</span></span><span class="line"><span class="cl">            &lt;descriptorref&gt;jar-with-dependencies&lt;/descriptorref&gt;
</span></span><span class="line"><span class="cl">          &lt;/descriptorrefs&gt;
</span></span><span class="line"><span class="cl">          &lt;finalname&gt;${project.build.finalName}&lt;/finalname&gt;
</span></span><span class="line"><span class="cl">          &lt;appendassemblyid&gt;false&lt;/appendassemblyid&gt;
</span></span><span class="line"><span class="cl">          &lt;archive&gt;
</span></span><span class="line"><span class="cl">            &lt;index&gt;true&lt;/index&gt;
</span></span><span class="line"><span class="cl">            &lt;manifest&gt;
</span></span><span class="line"><span class="cl">              &lt;adddefaultimplementationentries&gt;true&lt;/adddefaultimplementationentries&gt;
</span></span><span class="line"><span class="cl">            &lt;/manifest&gt;
</span></span><span class="line"><span class="cl">          &lt;/archive&gt;
</span></span><span class="line"><span class="cl">        &lt;/configuration&gt;
</span></span><span class="line"><span class="cl">        &lt;executions&gt;
</span></span><span class="line"><span class="cl">          &lt;execution&gt;
</span></span><span class="line"><span class="cl">            &lt;phase&gt;package&lt;/phase&gt;
</span></span><span class="line"><span class="cl">            &lt;goals&gt;
</span></span><span class="line"><span class="cl">              &lt;goal&gt;single&lt;/goal&gt;
</span></span><span class="line"><span class="cl">            &lt;/goals&gt;
</span></span><span class="line"><span class="cl">          &lt;/execution&gt;
</span></span><span class="line"><span class="cl">        &lt;/executions&gt;
</span></span><span class="line"><span class="cl">      &lt;/plugin&gt;
</span></span><span class="line"><span class="cl">    &lt;/plugins&gt;
</span></span><span class="line"><span class="cl">  &lt;/build&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>簽名的部分, 使用 maven-jarsigner-plugin 來做簽名即可.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">      &lt;plugin&gt;
</span></span><span class="line"><span class="cl">        &lt;groupid&gt;org.apache.maven.plugins&lt;/groupid&gt;
</span></span><span class="line"><span class="cl">        &lt;artifactid&gt;maven-jarsigner-plugin&lt;/artifactid&gt;
</span></span><span class="line"><span class="cl">        &lt;version&gt;1.2&lt;/version&gt;
</span></span><span class="line"><span class="cl">        &lt;executions&gt;
</span></span><span class="line"><span class="cl">          &lt;execution&gt;
</span></span><span class="line"><span class="cl">            &lt;id&gt;sign&lt;/id&gt;
</span></span><span class="line"><span class="cl">            &lt;goals&gt;
</span></span><span class="line"><span class="cl">              &lt;goal&gt;sign&lt;/goal&gt;
</span></span><span class="line"><span class="cl">            &lt;/goals&gt;
</span></span><span class="line"><span class="cl">          &lt;/execution&gt;
</span></span><span class="line"><span class="cl">        &lt;/executions&gt;
</span></span><span class="line"><span class="cl">        &lt;configuration&gt;
</span></span><span class="line"><span class="cl">          &lt;keystore&gt;${basedir}\\key\\xxxx.store&lt;/keystore&gt;
</span></span><span class="line"><span class="cl">          &lt;alias&gt;xxxxkey&lt;/alias&gt;
</span></span><span class="line"><span class="cl">          &lt;storepass&gt;yourpassword&lt;/storepass&gt;
</span></span><span class="line"><span class="cl">        &lt;/configuration&gt;
</span></span><span class="line"><span class="cl">      &lt;/plugin&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>實際上他會呼叫 jarsigner.exe 來做簽名的動作, 可以在 console 看到 log如下 (因為是 debug level, 所以要把 Maven 開到 debug mode 才看得到)```</p>
<p><code>[debug] Executing: cmd.exe /X /C \&quot;...\\jarsigner.exe -verify ...\\app-client-1.0.jar\&quot;</code></p>
<p>另外, 也可以使用 maven-jar-plugin, 效果和 maven-jarsigner-plugin 是一樣的. 但是在 jar-plugin 2.3 以後, <a href="http://maven.apache.org/plugins/maven-jar-plugin/sign-mojo.html/" target="_blank" rel="noopener noreffer">jar:sign 已經不被建議使用</a>, 請改用 jarsigner-plugin. 比較特別的是, jar-plugin 可以指定 signedjar 把簽名過的檔案放到其他目錄, 而 jarsigner-plugin 似乎沒有這個功能.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">      &lt;plugin&gt;
</span></span><span class="line"><span class="cl">        &lt;groupid&gt;org.apache.maven.plugins&lt;/groupid&gt;
</span></span><span class="line"><span class="cl">        &lt;artifactid&gt;maven-jar-plugin&lt;/artifactid&gt;
</span></span><span class="line"><span class="cl">        &lt;version&gt;2.3.1&lt;/version&gt;
</span></span><span class="line"><span class="cl">        &lt;executions&gt;
</span></span><span class="line"><span class="cl">          &lt;execution&gt;
</span></span><span class="line"><span class="cl">            &lt;goals&gt;
</span></span><span class="line"><span class="cl">              &lt;goal&gt;sign&lt;/goal&gt;
</span></span><span class="line"><span class="cl">            &lt;/goals&gt;
</span></span><span class="line"><span class="cl">          &lt;/execution&gt;
</span></span><span class="line"><span class="cl">        &lt;/executions&gt;
</span></span><span class="line"><span class="cl">        &lt;configuration&gt;
</span></span><span class="line"><span class="cl">          &lt;keystore&gt;${basedir}\\key\\xxxx.store&lt;/keystore&gt;
</span></span><span class="line"><span class="cl">          &lt;alias&gt;xxxxkey&lt;/alias&gt;
</span></span><span class="line"><span class="cl">          &lt;storepass&gt;yourpassword&lt;/storepass&gt;
</span></span><span class="line"><span class="cl">          
</span></span><span class="line"><span class="cl">          &lt;verify&gt;true&lt;/verify&gt;
</span></span><span class="line"><span class="cl">        &lt;/configuration&gt;
</span></span><span class="line"><span class="cl">      &lt;/plugin&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>喔, 講了那麼多, 都沒有提到 Jar&hellip; 其實 Applet 就是一個 Jar, 所以用上面 Applet 的方式就可以了. 差別在於 Jar 一般來說不需要簽名就是了.</p>
<h2 id="參考">參考</h2>
<ul>
<li><a href="http://maven.apache.org/plugins/maven-assembly-plugin/single-mojo.html" target="_blank" rel="noopener noreffer">http://maven.apache.org/plugins/maven-assembly-plugin/single-mojo.html</a></li>
<li><a href="http://maven.apache.org/plugins/maven-jar-plugin/" target="_blank" rel="noopener noreffer">http://maven.apache.org/plugins/maven-jar-plugin/</a></li>
<li><a href="http://maven.apache.org/plugins/maven-jarsigner-plugin/" target="_blank" rel="noopener noreffer">http://maven.apache.org/plugins/maven-jarsigner-plugin/</a></li>
<li><a href="http://stackoverflow.com/questions/2027753/how-to-deploy-applet-with-dependencies-jar-using-maven-and-sign-it" target="_blank" rel="noopener noreffer">http://stackoverflow.com/questions/2027753/how-to-deploy-applet-with-dependencies-jar-using-maven-and-sign-it</a></li>
</ul>
<h2 id="reference-for-assembly-for-standalone-jar">Reference for assembly for standalone jar</h2>
<ul>
<li><a href="http://stackoverflow.com/questions/1832853/is-it-possible-to-create-an-uber-jar-containing-the-project-classes-and-the-pro" target="_blank" rel="noopener noreffer">http://stackoverflow.com/questions/1832853/is-it-possible-to-create-an-uber-jar-containing-the-project-classes-and-the-pro</a></li>
<li><a href="http://blog.csdn.net/mozhenghua/archive/2010/06/14/5671133.asp" target="_blank" rel="noopener noreffer">http://blog.csdn.net/mozhenghua/archive/2010/06/14/5671133.asp</a></li>
</ul>
]]></description>
</item>
<item>
    <title>設定 WebLogic 的 memory 參數</title>
    <link>https://dennys.github.io/201004/weblogic-memory-parameter/</link>
    <pubDate>Fri, 02 Apr 2010 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/201004/weblogic-memory-parameter/</guid>
    <description><![CDATA[<p>這是第二次吃虧了, 把他記下來, 免得下次又忘記了&hellip;</p>
<p>問題的起源在於記憶體不足, 通常訊息如下. 一次是某個單一 XML 訊息太大, 另一次是 ear 檔案太大, re-deploy 的時候會出問題.</p>
<p><code>java.lang.OutOfMemoryError: PermGen space</code></p>
<p>如果是簡單的 Java 程式, 那解法很簡單, 改參數就好了, 把 -XX:PermSize=*** 放大即可. 不過在 WebLogic 裡面, script 包了好幾層, 就很容易漏掉了. 這次就是因為呆呆的直接在最外層設定 MEM_ARGS, 然後被裡層的 script 蓋掉了, 所以當然沒作用&hellip;</p>
<p>建議的作法是修改 USER_MEM_ARGS, 可參考 Modifying JVM Parameters in Server Start Scripts</p>
<p>最後, 在 WebLogic 10, 設定環境變數的程式在 domains//bin/setDomainEnv.sh, 可以看出不同平台, 甚至 production/develop mode 的不同也會導致參數不同, 不過不建議改這裡.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">if [ &#34;${JAVA_VENDOR}&#34; = &#34;Sun&#34; ] ; then
</span></span><span class="line"><span class="cl">       if [ &#34;${PRODUCTION_MODE}&#34; = &#34;&#34; ] ; then
</span></span><span class="line"><span class="cl">               MEM_DEV_ARGS=&#34;-XX:CompileThreshold=8000 -XX:PermSize=48m &#34;
</span></span><span class="line"><span class="cl">               export MEM_DEV_ARGS
</span></span><span class="line"><span class="cl">       fi
</span></span><span class="line"><span class="cl">fi
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Had to have a separate test here BECAUSE of immediate variable expansion
</span></span><span class="line"><span class="cl">on windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">if [ &#34;${JAVA_VENDOR}&#34; = &#34;Sun&#34; ] ; then
</span></span><span class="line"><span class="cl">       MEM_ARGS=&#34;${MEM_ARGS} ${MEM_DEV_ARGS} -XX:MaxPermSize=128m&#34;
</span></span><span class="line"><span class="cl">       export MEM_ARGS
</span></span><span class="line"><span class="cl">fi
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">if [ &#34;${JAVA_VENDOR}&#34; = &#34;HP&#34; ] ; then
</span></span><span class="line"><span class="cl">       MEM_ARGS=&#34;${MEM_ARGS} -XX:MaxPermSize=128m&#34;
</span></span><span class="line"><span class="cl">       export MEM_ARGS
</span></span><span class="line"><span class="cl">fi
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># IF USER_MEM_ARGS the environment variable is set, use it to override ALL
</span></span><span class="line"><span class="cl">MEM_ARGS values
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">if [ &#34;${USER_MEM_ARGS}&#34; != &#34;&#34; ] ; then
</span></span><span class="line"><span class="cl">       MEM_ARGS=&#34;${USER_MEM_ARGS}&#34;
</span></span><span class="line"><span class="cl">       export MEM_ARGS
</span></span><span class="line"><span class="cl">fi
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>WebLogic 和 NetWeaver 的 License</title>
    <link>https://dennys.github.io/200908/weblogic-netweaver-license/</link>
    <pubDate>Sat, 08 Aug 2009 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/200908/weblogic-netweaver-license/</guid>
    <description><![CDATA[<p>又是一篇筆記, 又是一個吃虧兩次的問題&hellip;</p>
<p><strong><a href="http://www.bea.com/framework.jsp?CNT=index.htm&amp;FP=/content/products/weblogic" target="_blank" rel="noopener noreffer">WebLogic</a></strong></p>
<p>先講 WebLogic, 免費的 developer license, 可以用一年, 但是只能有 5 個 IP 連上來, 而且我覺得他 server 本身應該就已經算上一個 IP 了. 如果超過了, 第 6 個以後的 IP 會看到錯誤訊息<br>
錯誤訊息如下:</p>
<p><code>&lt;BEA-000211&gt; &lt;Connection rejected, the server license allows connections from only 5 unique IP addresses.&gt;</code></p>
<p>聽說 Bea 在被 Oracle 買下之後, 這些 license 檔案都開放自由下載了(當然, 該給錢的還是要給), 不過我是沒有找到就是了. (有人如果知道, 麻煩提供一下, 謝謝.</p>
<p>解法:</p>
<ol>
<li>重開機就會重新計算</li>
<li>當然, 放上 license 就可以了.</li>
</ol>
<p>參考: <a href="http://e-docs.bea.com/wls/docs92/intro/overview.html#wp1087177" target="_blank" rel="noopener noreffer">WebLogic Overview</a><br>
<a href="http://edocs.bea.com/platform/docs81/install/license.html" title="http://edocs.bea.com/platform/docs81/install/license.html" target="_blank" rel="noopener noreffer">http://edocs.bea.com/platform/docs81/install/license.html</a></p>
<p><strong>NetWeaver</strong></p>
<p>NetWeaver 安裝完之後, 會有一個 temporary license, 可以使用 28 天, 過了時間之後, 每 25 分鐘會給你自動停機. 但是如果直接 restart 是無法啟動的, 得先 stop 再 start, 而且重點是, 畫面上是看不到的, 因此得去 log 裡面翻箱倒櫃找&hellip;</p>
<p>檔案位置: /usr/sap///j2ee/cluster/server0/log/defaultTrace*</p>
<p>錯誤訊息:</p>
<p><code>The installed license for software product &quot;{0}&quot; is NOT valid.</code></p>
<p>參考:</p>
<ol>
<li><a href="http://help.sap.com/saphelp_nw04s/helpdata/en/14/5e533e5ff4d064e10000000a114084/frameset.htm" target="_blank" rel="noopener noreffer">http://help.sap.com/saphelp_nw04s/helpdata/en/14/5e533e5ff4d064e10000000a114084/frameset.htm</a></li>
<li><a href="https://wiki.sdn.sap.com/wiki/display/BPMT/How%20to%20check%20the%20default%20trace" target="_blank" rel="noopener noreffer">How to check the default trace</a></li>
</ol>
]]></description>
</item>
<item>
    <title>JDBC Leaked Connection in WebLogic</title>
    <link>https://dennys.github.io/200907/jdbc-leaked-connection-in-weblogic/</link>
    <pubDate>Mon, 06 Jul 2009 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/200907/jdbc-leaked-connection-in-weblogic/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>最近發現某個 <a href="http://www.bea.com/framework.jsp?CNT=index.htm&amp;FP=/content/products/weblogic" target="_blank" rel="noopener noreffer">WebLogic</a> 的 JDBC connection 只會增加, 不會減少, 意思是說, 程式和 WebLogic 拿了很多 JDBC connection, 但是都沒有還給系統. 在程式執行一段時間之後, 就會拿不到 JDBC connection 了, 然後就掛了. WebLogic 的 console 可以看到, connection 的數字一直增加.</p>
<p><a href="http://www.flickr.com/photos/dennys_blog/3373931575" title="jdbc_monitor" target="_blank" rel="noopener noreffer"><figure><a class="lightgallery" href="http://farm4.static.flickr.com/3596/3373931575_16a47e0632_o.jpg" title="jdbc_monitor" data-thumbnail="http://farm4.static.flickr.com/3596/3373931575_16a47e0632_o.jpg" data-sub-html="<h2>jdbc_monitor</h2><p>jdbc_monitor</p>">
        
    </a><figcaption class="image-caption">jdbc_monitor</figcaption>
    </figure></a></p>
<h2 id="解決方法">解決方法</h2>
<p>WebLogic 的 log 如下, 整個 stack trace 就不全列出來了, 重點在於, 當 WebLogic 的 JDBC connection pool 的 connection 都被要光之後, 後面的程式就無法和 database 連線了.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">java.sql.SQLException: Internal error: Cannot obtain XAConnection  
</span></span><span class="line"><span class="cl">weblogic.common.resourcepool.ResourceDeadException  
</span></span></code></pre></td></tr></table>
</div>
</div><p>因為在上圖中的 WebLogic 的 console 看到的 &ldquo;leaked connection count&rdquo; 一直都是 0, 所以我也沒有往這個方向思考過. 不過後來才發現需要做一些設定才能偵測 leaked connection, 如下</p>
<ol>
<li>
<p>設定 WebLogic 的 &ldquo;Inactive Connection Timeout&rdquo;, 這個參數的意義是, 如果有個 JDBC connection 被拿走之後, 超過一段時間沒有使用 (如下圖, 代表 10 分鐘), 則系統就會自動收回. (其實設定這個之後, 這個問題基本上就已經暫時解決了)</p>
<p><a href="http://www.flickr.com/photos/dennys_blog/3374748492" title="jdbc_connection_pool" target="_blank" rel="noopener noreffer"><figure><a class="lightgallery" href="http://farm4.static.flickr.com/3578/3374748492_ca4a5aa6b2_o.jpg" title="jdbc_connection_pool" data-thumbnail="http://farm4.static.flickr.com/3578/3374748492_ca4a5aa6b2_o.jpg" data-sub-html="<h2>jdbc_connection_pool</h2><p>jdbc_connection_pool</p>">
        
    </a><figcaption class="image-caption">jdbc_connection_pool</figcaption>
    </figure></a></p>
</li>
<li>
<p>打開偵測的工具, 如下圖, 系統就會在 log 顯示 leaked connection 的資訊</p>
<p><a href="http://www.flickr.com/photos/dennys_blog/3374748472" title="jdbc_diagnostics" target="_blank" rel="noopener noreffer"><figure><a class="lightgallery" href="http://farm4.static.flickr.com/3587/3374748472_7f27e6d7da_o.jpg" title="jdbc_diagnostics" data-thumbnail="http://farm4.static.flickr.com/3587/3374748472_7f27e6d7da_o.jpg" data-sub-html="<h2>jdbc_diagnostics</h2><p>jdbc_diagnostics</p>">
        
    </a><figcaption class="image-caption">jdbc_diagnostics</figcaption>
    </figure></a></p>
</li>
<li>
<p>設定好之後 (不用重開 WebLogic) , 觀察系統一段時間, 結果如下, 看到 &ldquo;leaked connection count&rdquo; 的值不再是 0 了, 而 active connection 在沒人使用時, 也會降到 0 了.</p>
<p><a href="http://www.flickr.com/photos/dennys_blog/3374748508" title="jdbc_monitor_leaked" target="_blank" rel="noopener noreffer"><figure><a class="lightgallery" href="http://farm4.static.flickr.com/3554/3374748508_d7bd3e285c_o.jpg" title="jdbc_monitor_leaked" data-thumbnail="http://farm4.static.flickr.com/3554/3374748508_d7bd3e285c_o.jpg" data-sub-html="<h2>jdbc_monitor_leaked</h2><p>jdbc_monitor_leaked</p>">
        
    </a><figcaption class="image-caption">jdbc_monitor_leaked</figcaption>
    </figure></a></p>
</li>
<li>
<p>之後 WebLogic 的 log (放在 user_projects/domains/%domainname%/%servername%/logs, 而不是自己 AP 的 log) 如下, 整個 stack trace 滿大的, 重點在第 28 行, 問題發生在 &ldquo;com.test.dao.getStatus&rdquo; 這個 method, 意思就是說, 有某個 JDBC connection 在這個程式被拿走之後, 一直沒有還給系統, 於是就找到兇手了.</p>
</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">1.  ####&lt;Mar 11, 2009 11:14:36 PM CST&gt; &lt;Warning&gt; &lt;JDBC&gt; &lt;testserver1&gt; &lt;Server1&gt; &lt;\[ACTIVE\] ExecuteThread: &#39;4&#39; for queue: &#39;weblogic.kernel.Default (self-tuning)&#39;&gt; &lt;&lt;WLS Kernel&gt;&gt; &lt;&gt; &lt;&gt; &lt;1236748476017&gt; &lt;BEA-001153&gt; &lt;Forcibly releasing inactive connection &#34;\[weblogic.jdbc.wrapper.JTAConnection\_weblogic\_jdbc\_wrapper\_XAConnection\_oracle\_jdbc\_driver\_LogicalConnection-TEST\_DS-311, oracle.jdbc.driver.LogicalConnection@42a794\]&#34; back into the connection pool &#34;TEST\_DS&#34;, currently reserved by: java.lang.Exception
</span></span><span class="line"><span class="cl">2.          at weblogic.jdbc.common.internal.ConnectionEnv.setup(ConnectionEnv.java:291)
</span></span><span class="line"><span class="cl">3.          at weblogic.common.resourcepool.ResourcePoolImpl.reserveResource(ResourcePoolImpl.java:314)
</span></span><span class="line"><span class="cl">4.          at weblogic.common.resourcepool.ResourcePoolImpl.reserveResource(ResourcePoolImpl.java:292)
</span></span><span class="line"><span class="cl">5.          at weblogic.jdbc.common.internal.ConnectionPool.reserve(ConnectionPool.java:425)
</span></span><span class="line"><span class="cl">6.          at weblogic.jdbc.common.internal.ConnectionPool.reserve(ConnectionPool.java:316)
</span></span><span class="line"><span class="cl">7.          at weblogic.jdbc.common.internal.ConnectionPoolManager.reserve(ConnectionPoolManager.java:93)
</span></span><span class="line"><span class="cl">8.          at weblogic.jdbc.common.internal.ConnectionPoolManager.reserve(ConnectionPoolManager.java:61)
</span></span><span class="line"><span class="cl">9.          at weblogic.jdbc.jta.DataSource.getXAConnectionFromPool(DataSource.java:1474)
</span></span><span class="line"><span class="cl">10.          at weblogic.jdbc.jta.DataSource.refreshXAConnAndEnlist(DataSource.java:1303)
</span></span><span class="line"><span class="cl">11.          at weblogic.jdbc.jta.DataSource.getConnection(DataSource.java:426)
</span></span><span class="line"><span class="cl">12.          at weblogic.jdbc.jta.DataSource.connect(DataSource.java:383)
</span></span><span class="line"><span class="cl">13.          at weblogic.jdbc.common.internal.RmiDataSource.getConnection(RmiDataSource.java:339)
</span></span><span class="line"><span class="cl">14.          at org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider.getConnection(LocalDataSourceConnectionProvider.java:81)
</span></span><span class="line"><span class="cl">15.          at org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:423)
</span></span><span class="line"><span class="cl">16.          at org.hibernate.jdbc.ConnectionManager.getConnection(ConnectionManager.java:144)
</span></span><span class="line"><span class="cl">17.          at org.hibernate.jdbc.AbstractBatcher.prepareQueryStatement(AbstractBatcher.java:139)
</span></span><span class="line"><span class="cl">18.          at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1547)
</span></span><span class="line"><span class="cl">19.          at org.hibernate.loader.Loader.doQuery(Loader.java:673)
</span></span><span class="line"><span class="cl">20.          at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:236)
</span></span><span class="line"><span class="cl">21.          at org.hibernate.loader.Loader.doList(Loader.java:2220)
</span></span><span class="line"><span class="cl">22.          at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2104)
</span></span><span class="line"><span class="cl">23.          at org.hibernate.loader.Loader.list(Loader.java:2099)
</span></span><span class="line"><span class="cl">24.          at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:289)
</span></span><span class="line"><span class="cl">25.          at org.hibernate.impl.SessionImpl.listCustomQuery(SessionImpl.java:1695)
</span></span><span class="line"><span class="cl">26.          at org.hibernate.impl.AbstractSessionImpl.list(AbstractSessionImpl.java:142)
</span></span><span class="line"><span class="cl">27.          at org.hibernate.impl.SQLQueryImpl.list(SQLQueryImpl.java:152)
</span></span><span class="line"><span class="cl">28.          at com.test.dao.getStatus(dao.java:194)
</span></span><span class="line"><span class="cl">29.          at sun.reflect.GeneratedMethodAccessor755.invoke(Unknown Source)
</span></span><span class="line"><span class="cl">30.          at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
</span></span><span class="line"><span class="cl">31.          at java.lang.reflect.Method.invoke(Method.java:585)
</span></span><span class="line"><span class="cl">32.          at org.apache.axis2.rpc.receivers.RPCUtil.invokeServiceClass(RPCUtil.java:194)
</span></span><span class="line"><span class="cl">33.          at org.apache.axis2.rpc.receivers.RPCMessageReceiver.invokeBusinessLogic(RPCMessageReceiver.java:102)
</span></span><span class="line"><span class="cl">34.          at org.apache.axis2.receivers.AbstractInOutMessageReceiver.invokeBusinessLogic(AbstractInOutMessageReceiver.java:40)
</span></span><span class="line"><span class="cl">35.          at org.apache.axis2.receivers.AbstractMessageReceiver.receive(AbstractMessageReceiver.java:100)
</span></span><span class="line"><span class="cl">36.          at org.apache.axis2.engine.AxisEngine.receive(AxisEngine.java:176)
</span></span><span class="line"><span class="cl">37.          at org.apache.axis2.transport.http.HTTPTransportUtils.processHTTPPostRequest(HTTPTransportUtils.java:275)
</span></span><span class="line"><span class="cl">38.          at org.apache.axis2.transport.http.AxisServlet.doPost(AxisServlet.java:133)
</span></span><span class="line"><span class="cl">39.          at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
</span></span><span class="line"><span class="cl">40.          at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
</span></span><span class="line"><span class="cl">41.          at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:226)
</span></span><span class="line"><span class="cl">42.          at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:124)
</span></span><span class="line"><span class="cl">43.          at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:283)
</span></span><span class="line"><span class="cl">44.          at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:175)
</span></span><span class="line"><span class="cl">45.          at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3395)
</span></span><span class="line"><span class="cl">46.          at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
</span></span><span class="line"><span class="cl">47.          at weblogic.security.service.SecurityManager.runAs(Unknown Source)
</span></span><span class="line"><span class="cl">48.          at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2140)
</span></span><span class="line"><span class="cl">49.          at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2046)
</span></span><span class="line"><span class="cl">50.          at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1366)
</span></span><span class="line"><span class="cl">51.          at weblogic.work.ExecuteThread.execute(ExecuteThread.java:200)
</span></span><span class="line"><span class="cl">52.          at weblogic.work.ExecuteThread.run(ExecuteThread.java:172)
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="測試環境">測試環境</h2>
<p>WebLogic 10.0 MP1, JDBC driver 使用的是內建的 Oracle thin driver. 另外也發現一件事情, 如果改用 <a href="http://download.oracle.com/docs/cd/E12840_01/wls/docs103/jdbc_drivers/usedriver.html" target="_blank" rel="noopener noreffer">Bea 的 Oracle driver</a>, 則 connection 成長的速度會放慢, 但最後還是一樣會爆掉的啦</p>
]]></description>
</item>
<item>
    <title>Command Line Deploy on NetWeaver</title>
    <link>https://dennys.github.io/200903/command-line-deploy-on-netweaver/</link>
    <pubDate>Sun, 22 Mar 2009 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/200903/command-line-deploy-on-netweaver/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>要把 ear 檔給 deploy 到 NetWeaver, 標準的作法應該是使用 <a href="http://help.sap.com/SAPHELP_NW70/helpdata/EN/3c/7d9e2588827546a2b8f2e7d8a26434/frameset.htm" target="_blank" rel="noopener noreffer">SDM Remote GUI Client</a> , 使用上是不困難, 但有幾個缺點:</p>
<ol>
<li>雖然說是 Remote GUI, 但是基本上你的環境得有安裝 NetWeaver 才行, 也不知道能不能只單單安裝 SDM. 因此我都是用 VNC 連上去再做 deploy</li>
<li>GUI 的好處是簡單, 缺點就是你如果常常要做這個動作, 然後一直在選檔案, 執行, 確認, &hellip; 等等按來按去, 按久了也真的滿累的</li>
<li>這個 GUI 有個很怪的地方, 沒法 re-deploy, 也就是說, 如果要更新版本時, 得先把舊版 un-deploy, 然後再 deploy, 這樣真的滿不方便的</li>
</ol>
<h2 id="command-line-deploy-的方法">Command line deploy 的方法</h2>
<p>因此呢, 需要研究如何在 NetWeaver 上使用 command line deploy. 研讀了一下使用手冊 (裝好 SDM 就有了, 放在 /program/doc/SDMCommandLineDoc***_en_final.pdf), 指令如下</p>
<p>步驟1: 把 SDM 停下來 (*** 代表你 instance 的名字, 通常是三個大寫字元)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/usr/sap/\*\*\*/JC00/SDM/program/StopServer.sh  
</span></span></code></pre></td></tr></table>
</div>
</div><p>步驟2: 把模式改成 standalone, 這樣才能做 command line deploy.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sdm jstartup sdmhome=/usr/sap/\*\*\*/JC00/SDM/program mode=standalone
</span></span></code></pre></td></tr></table>
</div>
</div><p>步驟3: 執行這個指令, 就可以 deploy 了. updateversions 這個參數的目的在於, 如果版本一樣, 還是可以 re-deploy.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cd /usr/sap/\*\*\*/JC00/SDM/program java -jar bin/SDM.jar deploy file=/tmp/AP.ear updateversions=all
</span></span></code></pre></td></tr></table>
</div>
</div><p>要注意的是, 上面步驟執行之後, Remote GUI 就不能使用了, 得使用下列指令把模式切回來才能使用 GUI.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sdm jstartup sdmhome=/usr/sap/\*\*\*/JC00/SDM/program mode=standalone  
</span></span><span class="line"><span class="cl">/usr/sap/\*\*\*/JC00/SDM/program/StartServer.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>至於 undeploy, 執行下列指令即可, compname/compvendor 請參考 ear 檔裡面的 SAP_MANIFEST.MF</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">java -jar bin/SDM.jar undeploy compname=Application\_Name compvendor=test.com
</span></span></code></pre></td></tr></table>
</div>
</div><p>以上是 NetWeaver 7.0 的作法, 7.1 不知道會不會有什麼不同.<br>
參考:<br>
<a href="http://help.sap.com/saphelp_nw70/helpdata/EN/22/a7663bb3808c1fe10000000a114084/frameset.htm" target="_blank" rel="noopener noreffer">NetWeaver Software Deployment Manager</a></p>
]]></description>
</item>
<item>
    <title>Command Line Deploy on WebLogic</title>
    <link>https://dennys.github.io/200903/command-line-deploy-on-weblogic/</link>
    <pubDate>Sat, 21 Mar 2009 00:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/200903/command-line-deploy-on-weblogic/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>在 ear 檔愈長愈大之後 (30mb左右), deploy 程式變成一個有點累的動作, 因為 <a href="http://ant.apache.org/" target="_blank" rel="noopener noreffer">Ant</a> 只能做到把 ear 檔給 build 好, 之後的動作 (開 browser, login, deploy, active, start ap, &hellip;) 需要不少時間, 不但要按好幾個按鍵, 中間還得等待, 因此, 得找個方法讓 deploy 的動作自動化, 以便放進 Ant 或是批次檔. 翻了一下 <a href="http://www.bea.com/framework.jsp?CNT=index.htm&amp;FP=/content/products/weblogic" target="_blank" rel="noopener noreffer">WebLogic</a> 的文件, 看來不難做到, 而且還滿方便的.</p>
<h2 id="command-line-deploy-的方法">Command line deploy 的方法</h2>
<p>如果 WebLogic 就裝在<strong>自己的電腦</strong>上, 假設程式放在 D:\app_name.ear, 使用下列的指令就可以很方便的直接 deploy 上去.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">java -cp D:\\bea\\wlserver\_10.0\\server\\lib\\weblogic.jar weblogic.Deployer -adminurl t3://localhost:7001 -user weblogic -password weblogic -deploy &#34;D:\\app\_name.ear&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果 WebLogic 是裝在<strong>遠端的電腦</strong>, 指令基本上還是一樣, 只要多加上 -upload 參數就可以了.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">java -cp D:\\bea\\wlserver\_10.0\\server\\lib\\weblogic.jar weblogic.Deployer -adminurl t3://remotehost:7001 -user weblogic -password weblogic -deploy -upload &#34;D:\\app\_name.ear&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><p>需要注意的是, 如果之前已經有用 WebLogic 的 console 把程式給 deploy 上去, 請先刪除之前 upload 的檔案, 原因如下:</p>
<p>A. 使用 WebLogic 的 console 來作本機 deploy, 程式最後會被放到下面這個位置<br>
user_projects\domains\base_domain\servers\AdminServer\upload\app_name.ear<br>
B. 使用 WebLogic 的 deployer 來作遠端 deploy, 程式最後會被放到下面這個位置<br>
user_projects\domains\base_domain\servers\AdminServer\upload\app_name.ear\app\app_name.ear</p>
<p>使用 A 方法產生的檔案如果沒有刪除, 則 B 方法在建立目錄的時候就會失敗 (這是 Windows 環境測試的結果, UNIX 環境不太確定)</p>
<p>另外就是如果有人正在使用 WebLogic 的 console 修改系統參數而把 console 給 lock 時, 一樣會 deploy 失敗. 錯誤訊息為: The domain edit lock is owned by another session in non-exclusive mode. 因為 WebLogic 10 在 console 的 lock 並不是 by session 的, 也就是說, user 1 把 WebLogic 改成 edit 模式時, 在 active 之前, 如果 user 2 從另一個地方連進來, 也會看到目前是 edit 模式. 而這時如果 user 2 直接給他 rollback 了, user 1 就會發現他的東西不見了&hellip; 有點怪的設計, 不知道是不是我不會用.</p>
<p>TBD:<br>
-stage 參數是做什麼的?</p>
<h2 id="參考">參考</h2>
<ol>
<li><a href="http://edocs.bea.com/wls/docs100/deployment/deploy.html#wp1031460" target="_blank" rel="noopener noreffer">http://edocs.bea.com/wls/docs100/deployment/deploy.html#wp1031460</a></li>
</ol>
]]></description>
</item>
</channel>
</rss>
