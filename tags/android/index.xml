<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Android - Tag - Dennys Diary</title>
        <link>https://dennys.github.io/tags/android/</link>
        <description>Android - Tag - Dennys Diary</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 16 Mar 2022 18:00:00 &#43;0800</lastBuildDate><atom:link href="https://dennys.github.io/tags/android/" rel="self" type="application/rss+xml" /><item>
    <title>Google Pixel 5 Unlock / Root / Magisk</title>
    <link>https://dennys.github.io/2022/03/google-pixel-5-unlock-root-magisk.html</link>
    <pubDate>Wed, 16 Mar 2022 18:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/2022/03/google-pixel-5-unlock-root-magisk.html</guid>
    <description><![CDATA[<p> <strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></p>
<p><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></p>
<p><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></p>
<p>===================================================</p>
<h2 id="安裝-google-usb-driver">安裝 Google USB driver</h2>
<ol>
<li>首先要在電腦上安裝 Google USB driver, 可在這裡下載<a href="https://developer.android.com/studio/run/win-usb" target="_blank" rel="noopener noreffer">https://developer.android.com/studio/run/win-usb</a></li>
</ol>
<p>2. 解開壓縮檔 (應該是 usb_driver_r13-windows.zip), 在 android_winusb.inf 按右鍵, 然後一直往下就好了</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-11.png" target="_blank" rel="noopener noreffer"></a></p>
<p>ps: 沒有裝 driver 的話, 在執行 fastboot 的時候, 就會遇到 waiting for any device 的訊息</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-12.png" target="_blank" rel="noopener noreffer"></a></p>
<p>===================================================</p>
<h2 id="安裝-android-sdk-platform-tools">安裝 Android SDK Platform Tools</h2>
<p>從這裡下載, 一直 next next 就好.</p>
<p><a href="https://developer.android.com/studio/releases/platform-tools#downloads" target="_blank" rel="noopener noreffer">https://developer.android.com/studio/releases/platform-tools#downloads</a></p>
<p>===================================================</p>
<h2 id="手機解鎖-unlock">手機解鎖 Unlock</h2>
<p><strong>請記得先備份資料, 因為解鎖會清空資料</strong></p>
<p><strong>請記得先備份資料, 因為解鎖會清空資料</strong></p>
<p><strong>請記得先備份資料, 因為解鎖會清空資料</strong></p>
<p>1. 手機進入開發者模式並確定 adb devices 可以連上手機</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/auth.jpg" target="_blank" rel="noopener noreffer"></a></p>
<p>2. Enable OEM 解鎖</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/image-13.png" target="_blank" rel="noopener noreffer"></a></p>
<p>3. 執行下列指令, 手機會出現要你確認是否要 unlock, 按下去, 手機就解鎖了. <strong>注意: 這裡會把手機資料清空</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb reboot bootloader  
</span></span><span class="line"><span class="cl">fastboot flashing unlock
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://dennys.files.wordpress.com/2022/01/image-12.png" target="_blank" rel="noopener noreffer"></a></p>
<p>=============== 以上完成 Unlock, 以下為 Root 的步驟 ===============</p>
<h2 id="手機-root">手機 Root</h2>
<p>1. 用手機下載並安裝 Magisk (<a href="https://github.com/topjohnwu/magisk" target="_blank" rel="noopener noreffer">https://github.com/topjohnwu/magisk</a>_files/blob/canary/app-debug.apk)</p>
<p>2.1 檢查手機版本 (設定 -&gt; 關於, 然後拉到最下面), 譬如我這支是 SQ1A.220105.002</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-2.png" target="_blank" rel="noopener noreffer"></a></p>
<p>2.2 用電腦連到 <a href="https://developers.google.com/android/images" target="_blank" rel="noopener noreffer">https://developers.google.com/android/images</a>, 下載對應的 boot image (按 Link)</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/image-17.png" target="_blank" rel="noopener noreffer"></a></p>
<p>2.3 解開裡面的 vbmega.img 和 boot.img.</p>
<p><a href="https://dennys.files.wordpress.com/2022/01/image-16.png" target="_blank" rel="noopener noreffer"></a></p>
<p>3. 將前一步驟解出來的 boot.img 放到手機上, 然後使用 Magisk 對 boot.img 做 patch, 並把 patch 完後的檔案傳回電腦</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image.png" target="_blank" rel="noopener noreffer"></a></p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-1.png" target="_blank" rel="noopener noreffer"></a></p>
<p>4. 將手機重開, 並同時按下 電源+音量下鍵進入 bootloader 模式</p>
<p>5.1 用 fastboot 刷 vbmega.img, 不然刷完後重開機, 手機會出現 failed to load/verify boot images (應該是 Pixel 4A 5G 以後的都需要這個)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">fastboot flash --disable-verity --disable-verification vbmeta vbmeta.img
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://dennys.files.wordpress.com/2022/01/image-15.png" target="_blank" rel="noopener noreffer"></a></p>
<p>5.2 用 fastboot 刷剛剛用 Magisk 給 patch 過的 image. 注意, 這裡用的是 fastboot boot, 不是 fastboot flash. 刷完以後會自動重開機.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">fastboot boot magisk_patched.img
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://dennys.files.wordpress.com/2022/01/image-14.png" target="_blank" rel="noopener noreffer"></a></p>
<h2 id="magisk">Magisk</h2>
<p>6. 使用 Magisk 檢查是否 Root</p>
<p>若你的 Masgisk 長這樣</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-6.png" target="_blank" rel="noopener noreffer"></a></p>
<p>然後執行時出現這個畫面, 這時候按確定, 他應該會去嘗試下載, 然後最後說剖析套件時發生問題.</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-7.png" target="_blank" rel="noopener noreffer"></a></p>
<p>還是得裝前面講的版本 (<a href="https://github.com/topjohnwu/magisk" target="_blank" rel="noopener noreffer">https://github.com/topjohnwu/magisk</a>_files/blob/canary/app-debug.apk), 執行後看到下面畫面, 就是 Root 成功了.</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-3.png" target="_blank" rel="noopener noreffer"></a></p>
<p>7. Root 之後可再刷第三方 ROM, Pixel5 有一堆可刷, 可參考 <a href="https://forum.xda-developers.com/f/11343/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/f/11343/</a>. 比較意外的是, 本來以為最多人用的是 <a href="https://www.google.com/search?q=LineageOS" target="_blank" rel="noopener noreffer">LineageOS</a>, 不過看來 <a href="https://www.google.com/search?q=ProtonASOP" target="_blank" rel="noopener noreffer">ProtonASOP</a> 受到的關注更多 (以 XDA 上面的 views/replies 數量來看). 還有 <a href="https://forum.xda-developers.com/t/4192641/" target="_blank" rel="noopener noreffer">CleanSlate</a> 在沒有 Root 的情況下也可以使用, 這個值得研究一下.</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-9.png" target="_blank" rel="noopener noreffer"></a></p>
<p>參考:</p>
<ul>
<li><a href="https://www.mobile01.com/topicdetail.php?f=565&amp;t=6233575" target="_blank" rel="noopener noreffer">https://www.mobile01.com/topicdetail.php?f=565&t=6233575</a> (這篇是 Pixel 4XL, 所以不需要 vbmega.img)</li>
<li><a href="https://www.droidwin.com/how-to-root-pixel-devices-via-magisk-on-android-12/" target="_blank" rel="noopener noreffer">https://www.droidwin.com/how-to-root-pixel-devices-via-magisk-on-android-12/</a></li>
<li><a href="https://android.gadgethacks.com/how-to/root-pixel-5-still-pass-safetynet-full-guide-for-beginners-intermediate-users-0348101/" target="_blank" rel="noopener noreffer">https://android.gadgethacks.com/how-to/root-pixel-5-still-pass-safetynet-full-guide-for-beginners-intermediate-users-0348101/</a></li>
</ul>
]]></description>
</item>
<item>
    <title>Samsung Galaxy S7 Edge 刷 LineageOS</title>
    <link>https://dennys.github.io/2022/03/samsung-galaxy-s7-edge-lineageos.html</link>
    <pubDate>Wed, 16 Mar 2022 18:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/2022/03/samsung-galaxy-s7-edge-lineageos.html</guid>
    <description><![CDATA[<p> <strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!</strong></p>
<p><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!</strong></p>
<p><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!</strong></p>
<p>====================================================================</p>
<p>Samsung Galaxy S7 Edge 是 2016 年初的手機, 最多可更新到 Android 8, 最後的 patch 是 2020 年 9 月.</p>
<p>可以刷的 ROM 看來有很多 (可參考 <a href="https://forum.xda-developers.com/f/5186/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/f/5186/</a>)</p>
<ul>
<li>最有名的 LineageOS 15~19 (Android 8~12)</li>
<li>FloydQ: 這是基於 Android 10 的 Samsung OneUI 2.5, 這應該是可以用到比較多 Samsung 手機特有的功能</li>
</ul>
<h2 id="請先在電腦安裝以下兩個程式">請先在電腦安裝以下兩個程式</h2>
<ul>
<li>Samsung USB driver: <a href="http://developer.samsung.com/galaxy/others/android-usb-driver-for-windows" target="_blank" rel="noopener noreffer">http://developer.samsung.com/galaxy/others/android-usb-driver-for-windows</a></li>
<li>ODIN: <a href="https://odindownloader.com/" target="_blank" rel="noopener noreffer">https://odindownloader.com/</a></li>
</ul>
<h2 id="下載-lineageos-和-open-gapps">下載 LineageOS 和 Open GApps</h2>
<ul>
<li>LineageOS 19: <a href="https://forum.xda-developers.com/t/4369001/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/t/4369001/</a></li>
<li>LineageOS 18: <a href="https://forum.xda-developers.com/t/4172727/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/t/4172727/</a></li>
<li>Open Gapps: <a href="https://sourceforge.net/projects/opengapps/files/arm64/" target="_blank" rel="noopener noreffer">https://sourceforge.net/projects/opengapps/files/arm64/</a> =&gt; 注意, 這有綁 OS 版本, 在 2022/2/15 的版本還沒有支援 Android 12.</li>
</ul>
<h2 id="下載-twrp">下載 TWRP</h2>
<ul>
<li><a href="https://dl.twrp.me/hero2lte/twrp-3.6.0" target="_blank" rel="noopener noreffer">https://dl.twrp.me/hero2lte/twrp-3.6.0</a>_9-0-hero2lte.img.tar.html, 注意, 一開始使用 3.1.1 版, 結果都讀不到 SD card, 升到最新版後就好了.</li>
</ul>
<h2 id="安裝-twrp">安裝 TWRP</h2>
<ol>
<li>開啟工程模式<br>
1.1 設定→關於裝置→軟體資訊→版本號碼處連點8下<br>
1.2 進入開發人員選項後，USB偵錯以及OEM解鎖選項要打勾。</li>
<li>重開機進入 download mode<br>
3. 執行 ODIN, 把剛才的 twrp 給刷進去, 再重開就可以了</li>
</ol>
<h2 id="刷-lineageos-和-open-gapps">刷 LineageOS 和 Open Gapps</h2>
<p>執行 adb reboot recovery 或是先關機, 然後按音量上+Home+Power 鍵進入 TWRP Recovery. 選 INSTALL, 把LineageOS 和 Open Gapps 的 zip 檔案裝上去, 重開機就可以了.</p>
<p>如果要用 ADB, 指令如下:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb sideload open_gapps-arm64-11.0-nano-20220202.zip
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="twrp-被-lineageos-recovery-蓋掉的問題">TWRP 被 LineageOS Recovery 蓋掉的問題</h2>
<p>自 LineageOS 17 開始, 他自己有帶一個 Recovery, 嘗試刷回 TWRP 又常常失敗.</p>
<p>可試試看 <a href="https://forum.xda-developers.com/t/3334084/" target="_blank" rel="noopener noreffer">https://forum.xda-developers.com/t/3334084/</a> 的 step 6~8</p>
<p>=================================================</p>
<h2 id="nikgapps-測試-失敗">NikGapps 測試 (失敗)</h2>
<p>一開始用 LineageOS 自己的 Recovery, 刷 NikGapps 一直失敗</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb sideload NikGapps-basic-arm64-12-20211224-signed.zip  
</span></span><span class="line"><span class="cl">adb: sideload connection failed: closed  
</span></span><span class="line"><span class="cl">adb: trying pre-KitKat sideload method…  
</span></span><span class="line"><span class="cl">adb: pre-KitKat sideload connection failed: closed
</span></span></code></pre></td></tr></table>
</div>
</div><p>用以下指令可解決</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">C:\platform-tools&gt;fastboot devices  
</span></span><span class="line"><span class="cl">C:\platform-tools&gt;adb usb  
</span></span><span class="line"><span class="cl">C:\platform-tools&gt;adb sideload NikGapps-basic-arm64-12-20211224-signed.zip  
</span></span><span class="line"><span class="cl">serving: &#39;NikGapps-basic-arm64-12-20211224-signed.zip&#39; (~32%)
</span></span></code></pre></td></tr></table>
</div>
</div><p>但最後又一直卡在空間不足, 就放棄了.</p>
]]></description>
</item>
<item>
    <title>如何將不要驗證 (Do Not Validate) 加回 Android 11 以上的 EAP Wi-Fi</title>
    <link>https://dennys.github.io/2022/03/do-not-validate-android-11-eap-wi-fi.html</link>
    <pubDate>Wed, 16 Mar 2022 18:00:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/2022/03/do-not-validate-android-11-eap-wi-fi.html</guid>
    <description><![CDATA[<p> <strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></p>
<p><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></p>
<p><strong>注意: 系統刷機有一定的風險, 可能導致手機無法開機和失去保固, 資料還會被清空, 執行前請先三思!!!</strong></p>
<p>===================================================================</p>
<p>Android 10 以前, 如果是連到 Enterprise Wi-Fi (EAP/PEAP), CA 憑證是可以選 不要驗證, 如下:</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/image-13.png" target="_blank" rel="noopener noreffer"></a></p>
<p>自 Android 11 起, 如果是連到 Enterprise Wi-Fi (PEAP), CA 憑證就無法選 不要驗證, 原因可參考 <a href="https://www.xda-developers.com/android-11-break-enterprise-wifi-connection/" target="_blank" rel="noopener noreffer">https://www.xda-developers.com/android-11-break-enterprise-wifi-connection/</a>. 這個方向應該是對的, 但如果網管不改, 一般使用者恐怕也無能為力. (而且 iPhone 竟然沒有卡這個&hellip;)</p>
<p>爬了一下文, 看來是可以直接把這個設定加回去 (參考: <a href="https://android.stackexchange.com/questions/231859/%29" target="_blank" rel="noopener noreffer">https://android.stackexchange.com/questions/231859/)</a>, 但很不幸的, 檔案是放在 /data/misc/apexdata/com.android.wifi/WifiConfigStore.xm, 這裡的檔案必須 Unlock 才能修改. 文章裡面是寫有可能透過 App 修改, 但我沒找到方法, 如果有人找到好方法了, 也麻煩分享一下.</p>
<p>步驟如下</p>
<p>1. 首先, 要 Unlock, Pixel 5 (Android 12) 可參考 <a href="https://wordpress.com/post/dennys.wordpress.com/280" target="_blank" rel="noopener noreffer">https://wordpress.com/post/dennys.wordpress.com/280</a>. (做到 Unlock 解鎖就可以了, 不需要 Root)</p>
<p>2. 試著連上 Wi-Fi, 網域就隨便給他寫, 然後試著連線, 這當然是不會成功, 目的只是要先寫入一版 Config 檔案, 等一下可以修改.</p>
<p><a href="https://dennys.files.wordpress.com/2022/02/1-1.png" target="_blank" rel="noopener noreffer"></a></p>
<p>3. 先用下列指令檢查 WifiConfigStore.xml 是否正確, 這裡也可以用 adb pull 拉到電腦檢查, 但我一直沒成功, 就先用 cat 看</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb shell  
</span></span><span class="line"><span class="cl">su  
</span></span><span class="line"><span class="cl">cat /data/misc/apexdata/com.android.wifi/WifiConfigStore.xml
</span></span></code></pre></td></tr></table>
</div>
</div><p>WifiConfigStore.xml 內容如下, 可找 WifiEnterpriseConfiguration 這個關鍵字, 目的是要把紅色的設定值拿掉</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;WifiEnterpriseConfiguration&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Identity&#34;&gt;這裡是帳號名字&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;AnonIdentity&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Password&#34;&gt;這裡是密碼&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;ClientCert&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;CaCert&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;SubjectMatch&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Engine&#34;&gt;0&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;EngineId&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;PrivateKeyId&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;AltSubjectMatch&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;DomSuffixMatch&#34;&gt;這裡是上面隨便輸入的網域&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;CaPath&#34;&gt;/system/etc/security/cacerts&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;int name=&#34;EapMethod&#34; value=&#34;0&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;int name=&#34;Phase2Method&#34; value=&#34;4&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;PLMN&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Realm&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;int name=&#34;Ocsp&#34; value=&#34;0&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;WapiCertSuite&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;boolean name=&#34;AppInstalledRootCaCert&#34; value=&#34;false&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;boolean name=&#34;AppInstalledPrivateKey&#34; value=&#34;false&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;null name=&#34;KeyChainAlias&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;null name=&#34;DecoratedIdentityPrefix&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;/WifiEnterpriseConfiguration&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>4. 執行以下指令 (這指令是直接從上面那篇 stackexchange 抄過來的), 他就會把 CaPath 和 DomSuffixMatch 的內容改成空白. 最後一個步驟會重開, 要重開才會生效.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">adb shell  
</span></span><span class="line"><span class="cl">su  
</span></span><span class="line"><span class="cl">sed -i &#39;s%&lt;string name=&#34;CaPath&#34;&gt;.*&lt;/string&gt;%&lt;string name=&#34;CaPath&#34;&gt;&lt;/string&gt;%&#39; /data/misc/apexdata/com.android.wifi/WifiConfigStore.xml  
</span></span><span class="line"><span class="cl">sed -i &#39;s%&lt;string name=&#34;DomSuffixMatch&#34;&gt;.*&lt;/string&gt;%&lt;string name=&#34;DomSuffixMatch&#34;&gt;&lt;/string&gt;%&#39; /data/misc/apexdata/com.android.wifi/WifiConfigStore.xml  
</span></span><span class="line"><span class="cl">reboot
</span></span></code></pre></td></tr></table>
</div>
</div><p>5. 重開完後, 檢查 /data/misc/apexdata/com.android.wifi/WifiConfigStore.xml 的內容, 確認下面紅色這段的設定被清空了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;WifiEnterpriseConfiguration&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Identity&#34;&gt;這裡是帳號名字&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;AnonIdentity&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Password&#34;&gt;這裡是密碼&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;ClientCert&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;CaCert&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;SubjectMatch&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Engine&#34;&gt;0&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;EngineId&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;PrivateKeyId&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;AltSubjectMatch&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;DomSuffixMatch&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;CaPath&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;int name=&#34;EapMethod&#34; value=&#34;0&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;int name=&#34;Phase2Method&#34; value=&#34;4&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;PLMN&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;Realm&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;int name=&#34;Ocsp&#34; value=&#34;0&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;string name=&#34;WapiCertSuite&#34;&gt;&lt;/string&gt;  
</span></span><span class="line"><span class="cl">&lt;boolean name=&#34;AppInstalledRootCaCert&#34; value=&#34;false&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;boolean name=&#34;AppInstalledPrivateKey&#34; value=&#34;false&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;null name=&#34;KeyChainAlias&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;null name=&#34;DecoratedIdentityPrefix&#34; /&gt;  
</span></span><span class="line"><span class="cl">&lt;/WifiEnterpriseConfiguration&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>6. 這時候應該就可以連線了</p>
<p>7. 因為實際上並不需要 root, 只是為了修改 WifiConfigStore.xml, 因此改完後可以 UnRoot (移除 Magisk 和刷回原廠 boot.img), 但因為解鎖會清空資料, 而且下次又遇到新的 Wi-Fi 又得重來, 我就維持解鎖狀態了. 方法可參考 <a href="https://dennys.wordpress.com/?p=330" target="_blank" rel="noopener noreffer">https://dennys.wordpress.com/?p=330</a></p>
<h2 id="後記">後記</h2>
<p>1. 這個方法並不是把不要驗證 (Do Not Validate) 的設定加回去, 而是先嘗試連線一個要驗證的 Wi-Fi (當然這裡會失敗), 等他把設定檔存下來之後, 再進系統把它改掉, 所以還是和 Android 10 以前不太一樣. 所以每次連上一個新的要使用 EAP 的 Wi-Fi 基地台都要重新執行一次, 會比較麻煩.</p>
]]></description>
</item>
<item>
    <title>大尺寸 Pixel 3/4/5 &amp; Galaxy S8/S9/10</title>
    <link>https://dennys.github.io/2021/12/big-pixel-3-4-5-and-galaxy-s8-s9-10.html</link>
    <pubDate>Thu, 16 Dec 2021 07:17:00 &#43;0800</pubDate>
    <author>Dennys</author>
    <guid>https://dennys.github.io/2021/12/big-pixel-3-4-5-and-galaxy-s8-s9-10.html</guid>
    <description><![CDATA[<p>需求如下, 看來是 Pixel 3 XL 最符合, 不過 4GB 不知道會不會 lag…</p>
<ul>
<li>大螢幕 (&gt;6″)</li>
<li>無線充電</li>
<li>指紋辨識</li>
<li>Google 相簿 (optional)</li>
<li>插卡 (optional, 好像也用不太到)</li>
<li>不玩遊戲, 不看影片</li>
</ul>
<p>Pixel 3 XL</p>
<p>Pixel 3a XL</p>
<p>Pixel 4 XL</p>
<p>Pixel 4a 5G</p>
<p>Pixel 5</p>
<p>Pixel 5a</p>
<p>Galaxy S8+</p>
<p>Galaxy S9+</p>
<p>Galaxy S10+</p>
<p>上市時間</p>
<p>2018/10</p>
<p>2019/5</p>
<p>2019/10</p>
<p>2020/9</p>
<p>2020/10</p>
<p>2021/8</p>
<p>2017/4</p>
<p>2018/2</p>
<p>2019/2</p>
<p>上市價格</p>
<p>31100<br>
34100</p>
<p>17100</p>
<p>29550<br>
32550</p>
<p>15990</p>
<p>18990</p>
<p>未上市<br>
(US$499)</p>
<p>27900</p>
<p>28900<br>
29900<br>
31900</p>
<p>32900<br>
39900<br>
52900</p>
<p>尺寸</p>
<p>6.3</p>
<p>6.0</p>
<p>6.3</p>
<p>6.2</p>
<p>6.0</p>
<p>6.34</p>
<p>6.2</p>
<p>6.2</p>
<p>6.4</p>
<p>無線充電</p>
<p>有</p>
<p>無</p>
<p>有</p>
<p>有</p>
<p>有</p>
<p>有</p>
<p>有</p>
<p>有</p>
<p>有</p>
<p>插卡</p>
<p>無</p>
<p>無</p>
<p>無</p>
<p>無</p>
<p>無</p>
<p>無</p>
<p>有</p>
<p>有</p>
<p>有</p>
<p>Google 相簿</p>
<p>有</p>
<p>有</p>
<p>有</p>
<p>有</p>
<p>有</p>
<p>有</p>
<p>無</p>
<p>無</p>
<p>無</p>
<p>3.5mm 耳機</p>
<p>無</p>
<p>有</p>
<p>無</p>
<p>有</p>
<p>無</p>
<p>有</p>
<p>有</p>
<p>有</p>
<p>有</p>
<p>RAM</p>
<p>4GB</p>
<p>4GB</p>
<p>6GB</p>
<p>6GB</p>
<p>8GB</p>
<p>6GB</p>
<p>4GB</p>
<p>6GB</p>
<p>8/8/12 GB</p>
<p>ROM</p>
<p>64/128 GB</p>
<p>64 GB</p>
<p>64/128 GB</p>
<p>128 GB</p>
<p>128 GB</p>
<p>128 GB</p>
<p>64 GB</p>
<p>64/128/256 GB</p>
<p>128/512/1024 GB</p>
<p>USB</p>
<p>Type-C</p>
<p>Type-C</p>
<p>Type-C</p>
<p>Type-C</p>
<p>Type-C</p>
<p>Type-C</p>
<p>Type-C</p>
<p>Type-C</p>
<p>Type-C</p>
<p>辨識</p>
<p>指紋(後置)</p>
<p>指紋(後置)</p>
<p>臉部辨識</p>
<p>指紋(後置)</p>
<p>指紋(後置)</p>
<p>指紋(後置)</p>
<p>指紋(後置)</p>
<p>臉部辨識<br>
指紋(後置)<br>
虹膜</p>
<p>臉部辨識<br>
指紋(超聲波)</p>
<p>二手行情 (2021年底)</p>
<p>4000-5000</p>
<p>4000</p>
<p>7000-10000</p>
<p>9000-11000</p>
<p>11000</p>
<p>3000</p>
<p>3000~4000</p>
<p>5000~7000</p>
]]></description>
</item>
</channel>
</rss>
